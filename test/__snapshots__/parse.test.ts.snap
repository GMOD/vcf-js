// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Obscure VCF vcf lines with weird info field and missing format/genotypes 1`] = `
Array [
  Variant {
    "ALT": Array [
      "A",
    ],
    "CHROM": "lcl|Scaffald_1",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs118266897",
    ],
    "POS": 80465,
    "QUAL": 29,
    "REF": "R",
    "fields": Array [
      "lcl|Scaffald_1",
      "80465",
      "rs118266897",
      "R",
      "A",
      "29",
      "PASS",
      "NS=3;0,14;AF=0.5;DB;112;PG2.1",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "G",
    ],
    "CHROM": "lcl|Scaffald_1",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs118269296",
    ],
    "POS": 84818,
    "QUAL": 29,
    "REF": "R",
    "fields": Array [
      "lcl|Scaffald_1",
      "84818",
      "rs118269296",
      "R",
      "G",
      "29",
      "PASS",
      "NS=3;0,14;AF=0.5;DB;112;PG2.1",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "T",
    ],
    "CHROM": "lcl|Scaffald_1",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs118218236",
    ],
    "POS": 95414,
    "QUAL": 29,
    "REF": "W",
    "fields": Array [
      "lcl|Scaffald_1",
      "95414",
      "rs118218236",
      "W",
      "T",
      "29",
      "PASS",
      "NS=3;0,14;AF=0.5;DB;112;PG2.1",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "A",
    ],
    "CHROM": "lcl|Scaffald_1",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs118264755",
    ],
    "POS": 231384,
    "QUAL": 29,
    "REF": "R",
    "fields": Array [
      "lcl|Scaffald_1",
      "231384",
      "rs118264755",
      "R",
      "A",
      "29",
      "PASS",
      "NS=3;0,14;AF=0.5;DB;112;PG2.1",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "G",
    ],
    "CHROM": "lcl|Scaffald_1",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs118223336",
    ],
    "POS": 236429,
    "QUAL": 29,
    "REF": "R",
    "fields": Array [
      "lcl|Scaffald_1",
      "236429",
      "rs118223336",
      "R",
      "G",
      "29",
      "PASS",
      "NS=3;0,14;AF=6.5;DB;112;PG2.1",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "G",
    ],
    "CHROM": "lcl|Scaffald_1",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs118217257",
    ],
    "POS": 245378,
    "QUAL": 29,
    "REF": "R",
    "fields": Array [
      "lcl|Scaffald_1",
      "245378",
      "rs118217257",
      "R",
      "G",
      "29",
      "PASS",
      "NS=3;0,14;AF=0.5;DB;112;PG2.1",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
]
`;

exports[`VCF parser can get metadata from the header 1`] = `
Object {
  "ALT": Object {
    "*": Object {
      "Description": "Represents any possible alternative allele at this location",
    },
    "CNV": Object {
      "Description": "Copy number variable region (may be both deletion and duplication)",
    },
    "DEL": Object {
      "Description": "Deletion relative to the reference",
    },
    "DEL:ME": Object {
      "Description": "Deletion of mobile element relative to the reference",
    },
    "DUP": Object {
      "Description": "Region of elevated copy number relative to the reference",
    },
    "DUP:TANDEM": Object {
      "Description": "Tandem duplication",
    },
    "INS": Object {
      "Description": "Insertion of novel sequence relative to the reference",
    },
    "INS:ME": Object {
      "Description": "Insertion of a mobile element relative to the reference",
    },
    "INV": Object {
      "Description": "Inversion of reference sequence",
    },
    "NON_REF": Object {
      "Description": "Represents any possible alternative allele at this location",
    },
  },
  "FILTER": Object {
    "PASS": Object {
      "Description": "Passed all filters",
    },
    "undefined": Object {
      "0": "s",
      "1": "5",
      "2": "0",
      "Number": undefined,
    },
  },
  "FORMAT": Object {
    "AD": Object {
      "Description": "Read depth for each allele",
      "Number": "R",
      "Type": "Integer",
    },
    "ADF": Object {
      "Description": "Read depth for each allele on the forward strand",
      "Number": "R",
      "Type": "Integer",
    },
    "ADR": Object {
      "Description": "Read depth for each allele on the reverse strand",
      "Number": "R",
      "Type": "Integer",
    },
    "DP": Object {
      "Description": "Read depth",
      "Number": 1,
      "Type": "Integer",
    },
    "EC": Object {
      "Description": "Expected alternate allele counts",
      "Number": "A",
      "Type": "Integer",
    },
    "FT": Object {
      "Description": "Filter indicating if this genotype was \\"called\\"",
      "Number": 1,
      "Type": "String",
    },
    "GL": Object {
      "Description": "Genotype likelihoods",
      "Number": "G",
      "Type": "Float",
    },
    "GP": Object {
      "Description": "Genotype posterior probabilities",
      "Number": "G",
      "Type": "Float",
    },
    "GQ": Object {
      "Description": "Conditional genotype quality",
      "Number": 1,
      "Type": "Integer",
    },
    "GT": Object {
      "Description": "Genotype",
      "Number": 1,
      "Type": "String",
    },
    "HQ": Object {
      "Description": "Haplotype quality",
      "Number": 2,
      "Type": "Integer",
    },
    "MQ": Object {
      "Description": "RMS mapping quality",
      "Number": 1,
      "Type": "Integer",
    },
    "PL": Object {
      "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
      "Number": "G",
      "Type": "Integer",
    },
    "PQ": Object {
      "Description": "Phasing quality",
      "Number": 1,
      "Type": "Integer",
    },
    "PS": Object {
      "Description": "Phase set",
      "Number": 1,
      "Type": "Integer",
    },
    "undefined": Object {
      "0": "T",
      "1": "E",
      "2": "S",
      "3": "T",
      "Number": 1,
    },
  },
  "INFO": Object {
    "1000G": Object {
      "Description": "1000 Genomes membership",
      "Number": 0,
      "Type": "Flag",
    },
    "AA": Object {
      "Description": "Ancestral allele",
      "Number": 1,
      "Type": "String",
    },
    "AC": Object {
      "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
      "Number": "A",
      "Type": "Integer",
    },
    "AD": Object {
      "Description": "Total read depth for each allele",
      "Number": "R",
      "Type": "Integer",
    },
    "ADF": Object {
      "Description": "Read depth for each allele on the forward strand",
      "Number": "R",
      "Type": "Integer",
    },
    "ADR": Object {
      "Description": "Read depth for each allele on the reverse strand",
      "Number": "R",
      "Type": "Integer",
    },
    "AF": Object {
      "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
      "Number": "A",
      "Type": "Float",
    },
    "AN": Object {
      "Description": "Total number of alleles in called genotypes",
      "Number": 1,
      "Type": "Integer",
    },
    "BKPTID": Object {
      "Description": "ID of the assembled alternate allele in the assembly file",
      "Type": "String",
    },
    "BQ": Object {
      "Description": "RMS base quality",
      "Number": 1,
      "Type": "Float",
    },
    "CICN": Object {
      "Description": "Confidence interval around copy number for the segment",
      "Number": 2,
      "Type": "Integer",
    },
    "CICNADJ": Object {
      "Description": "Confidence interval around copy number for the adjacency",
      "Number": null,
      "Type": "Integer",
    },
    "CIEND": Object {
      "Description": "Confidence interval around END for imprecise variants",
      "Number": 2,
      "Type": "Integer",
    },
    "CIGAR": Object {
      "Description": "Cigar string describing how to align an alternate allele to the reference allele",
      "Number": 1,
      "Type": "Float",
    },
    "CILEN": Object {
      "Description": "Confidence interval around the inserted material between breakend",
      "Number": 2,
      "Type": "Integer",
    },
    "CIPOS": Object {
      "Description": "Confidence interval around POS for imprecise variants",
      "Number": 2,
      "Type": "Integer",
    },
    "CN": Object {
      "Description": "Copy number of segment containing breakend",
      "Number": 1,
      "Type": "Integer",
    },
    "CNADJ": Object {
      "Description": "Copy number of adjacency",
      "Number": null,
      "Type": "Integer",
    },
    "DB": Object {
      "Description": "dbSNP membership",
      "Number": 0,
      "Type": "Flag",
    },
    "DBRIPID": Object {
      "Description": "ID of this element in DBRIP",
      "Number": 1,
      "Type": "String",
    },
    "DBVARID": Object {
      "Description": "ID of this element in DBVAR",
      "Number": 1,
      "Type": "String",
    },
    "DGVID": Object {
      "Description": "ID of this element in Database of Genomic Variation",
      "Number": 1,
      "Type": "String",
    },
    "DP": Object {
      "Description": "combined depth across samples",
      "Number": 1,
      "Type": "Integer",
    },
    "DPADJ": Object {
      "Description": "Read Depth of adjacency",
      "Type": "Integer",
    },
    "END": Object {
      "Description": "End position (for use with symbolic alleles)",
      "Number": 1,
      "Type": "Integer",
    },
    "EVENT": Object {
      "Description": "ID of event associated to breakend",
      "Number": 1,
      "Type": "String",
    },
    "H2": Object {
      "Description": "HapMap2 membership",
      "Number": 0,
      "Type": "Flag",
    },
    "H3": Object {
      "Description": "HapMap3 membership",
      "Number": 0,
      "Type": "Flag",
    },
    "HOMLEN": Object {
      "Description": "Length of base pair identical micro-homology at event breakpoints",
      "Type": "Integer",
    },
    "HOMSEQ": Object {
      "Description": "Sequence of base pair identical micro-homology at event breakpoints",
      "Type": "String",
    },
    "IMPRECISE": Object {
      "Description": "Imprecise structural variation",
      "Number": 0,
      "Type": "Flag",
    },
    "MATEID": Object {
      "Description": "ID of mate breakends",
      "Number": null,
      "Type": "String",
    },
    "MEINFO": Object {
      "Description": "Mobile element info of the form NAME,START,END,POLARITY",
      "Number": 4,
      "Type": "String",
    },
    "METRANS": Object {
      "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
      "Number": 4,
      "Type": "String",
    },
    "MQ": Object {
      "Description": "RMS mapping quality",
      "Number": 1,
      "Type": null,
    },
    "MQ0": Object {
      "Description": "Number of MAPQ == 0 reads",
      "Number": 1,
      "Type": "Integer",
    },
    "NOVEL": Object {
      "Description": "Indicates a novel structural variation",
      "Number": 0,
      "Type": "Flag",
    },
    "NS": Object {
      "Description": "Number of samples with data",
      "Number": 1,
      "Type": "Integer",
    },
    "PARID": Object {
      "Description": "ID of partner breakend",
      "Number": 1,
      "Type": "String",
    },
    "SB": Object {
      "Description": "Strand bias",
      "Number": 4,
      "Type": "Integer",
    },
    "SOMATIC": Object {
      "Description": "Somatic mutation (for cancer genomics)",
      "Number": 0,
      "Type": "Flag",
    },
    "SVLEN": Object {
      "Description": "Difference in length between REF and ALT alleles",
      "Number": null,
      "Type": "Integer",
    },
    "SVTYPE": Object {
      "Description": "Type of structural variant",
      "Number": 1,
      "Type": "String",
    },
    "VALIDATED": Object {
      "Description": "Validated by follow-up experiment",
      "Number": 0,
      "Type": "Flag",
    },
    "undefined": Object {
      "0": "S",
      "1": "V",
      "2": "T",
      "3": "Y",
      "4": "P",
      "5": "E",
      "Number": 1,
    },
  },
  "contig": Object {
    "undefined": Object {
      "0": "2",
      "1": "0",
      "Number": undefined,
    },
  },
  "fileDate": "20090805",
  "fileformat": "VCFv4.3",
  "phasing": "partial",
  "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
  "source": "myImputationProgramV3.1",
}
`;

exports[`VCF parser can get metadata from the header 2`] = `
Object {
  "1000G": Object {
    "Description": "1000 Genomes membership",
    "Number": 0,
    "Type": "Flag",
  },
  "AA": Object {
    "Description": "Ancestral allele",
    "Number": 1,
    "Type": "String",
  },
  "AC": Object {
    "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
    "Number": "A",
    "Type": "Integer",
  },
  "AD": Object {
    "Description": "Total read depth for each allele",
    "Number": "R",
    "Type": "Integer",
  },
  "ADF": Object {
    "Description": "Read depth for each allele on the forward strand",
    "Number": "R",
    "Type": "Integer",
  },
  "ADR": Object {
    "Description": "Read depth for each allele on the reverse strand",
    "Number": "R",
    "Type": "Integer",
  },
  "AF": Object {
    "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
    "Number": "A",
    "Type": "Float",
  },
  "AN": Object {
    "Description": "Total number of alleles in called genotypes",
    "Number": 1,
    "Type": "Integer",
  },
  "BKPTID": Object {
    "Description": "ID of the assembled alternate allele in the assembly file",
    "Type": "String",
  },
  "BQ": Object {
    "Description": "RMS base quality",
    "Number": 1,
    "Type": "Float",
  },
  "CICN": Object {
    "Description": "Confidence interval around copy number for the segment",
    "Number": 2,
    "Type": "Integer",
  },
  "CICNADJ": Object {
    "Description": "Confidence interval around copy number for the adjacency",
    "Number": null,
    "Type": "Integer",
  },
  "CIEND": Object {
    "Description": "Confidence interval around END for imprecise variants",
    "Number": 2,
    "Type": "Integer",
  },
  "CIGAR": Object {
    "Description": "Cigar string describing how to align an alternate allele to the reference allele",
    "Number": 1,
    "Type": "Float",
  },
  "CILEN": Object {
    "Description": "Confidence interval around the inserted material between breakend",
    "Number": 2,
    "Type": "Integer",
  },
  "CIPOS": Object {
    "Description": "Confidence interval around POS for imprecise variants",
    "Number": 2,
    "Type": "Integer",
  },
  "CN": Object {
    "Description": "Copy number of segment containing breakend",
    "Number": 1,
    "Type": "Integer",
  },
  "CNADJ": Object {
    "Description": "Copy number of adjacency",
    "Number": null,
    "Type": "Integer",
  },
  "DB": Object {
    "Description": "dbSNP membership",
    "Number": 0,
    "Type": "Flag",
  },
  "DBRIPID": Object {
    "Description": "ID of this element in DBRIP",
    "Number": 1,
    "Type": "String",
  },
  "DBVARID": Object {
    "Description": "ID of this element in DBVAR",
    "Number": 1,
    "Type": "String",
  },
  "DGVID": Object {
    "Description": "ID of this element in Database of Genomic Variation",
    "Number": 1,
    "Type": "String",
  },
  "DP": Object {
    "Description": "combined depth across samples",
    "Number": 1,
    "Type": "Integer",
  },
  "DPADJ": Object {
    "Description": "Read Depth of adjacency",
    "Type": "Integer",
  },
  "END": Object {
    "Description": "End position (for use with symbolic alleles)",
    "Number": 1,
    "Type": "Integer",
  },
  "EVENT": Object {
    "Description": "ID of event associated to breakend",
    "Number": 1,
    "Type": "String",
  },
  "H2": Object {
    "Description": "HapMap2 membership",
    "Number": 0,
    "Type": "Flag",
  },
  "H3": Object {
    "Description": "HapMap3 membership",
    "Number": 0,
    "Type": "Flag",
  },
  "HOMLEN": Object {
    "Description": "Length of base pair identical micro-homology at event breakpoints",
    "Type": "Integer",
  },
  "HOMSEQ": Object {
    "Description": "Sequence of base pair identical micro-homology at event breakpoints",
    "Type": "String",
  },
  "IMPRECISE": Object {
    "Description": "Imprecise structural variation",
    "Number": 0,
    "Type": "Flag",
  },
  "MATEID": Object {
    "Description": "ID of mate breakends",
    "Number": null,
    "Type": "String",
  },
  "MEINFO": Object {
    "Description": "Mobile element info of the form NAME,START,END,POLARITY",
    "Number": 4,
    "Type": "String",
  },
  "METRANS": Object {
    "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
    "Number": 4,
    "Type": "String",
  },
  "MQ": Object {
    "Description": "RMS mapping quality",
    "Number": 1,
    "Type": null,
  },
  "MQ0": Object {
    "Description": "Number of MAPQ == 0 reads",
    "Number": 1,
    "Type": "Integer",
  },
  "NOVEL": Object {
    "Description": "Indicates a novel structural variation",
    "Number": 0,
    "Type": "Flag",
  },
  "NS": Object {
    "Description": "Number of samples with data",
    "Number": 1,
    "Type": "Integer",
  },
  "PARID": Object {
    "Description": "ID of partner breakend",
    "Number": 1,
    "Type": "String",
  },
  "SB": Object {
    "Description": "Strand bias",
    "Number": 4,
    "Type": "Integer",
  },
  "SOMATIC": Object {
    "Description": "Somatic mutation (for cancer genomics)",
    "Number": 0,
    "Type": "Flag",
  },
  "SVLEN": Object {
    "Description": "Difference in length between REF and ALT alleles",
    "Number": null,
    "Type": "Integer",
  },
  "SVTYPE": Object {
    "Description": "Type of structural variant",
    "Number": 1,
    "Type": "String",
  },
  "VALIDATED": Object {
    "Description": "Validated by follow-up experiment",
    "Number": 0,
    "Type": "Flag",
  },
  "undefined": Object {
    "0": "S",
    "1": "V",
    "2": "T",
    "3": "Y",
    "4": "P",
    "5": "E",
    "Number": 1,
  },
}
`;

exports[`VCF parser can parse a line from the VCF spec 1`] = `
Variant {
  "ALT": Array [
    "A",
  ],
  "CHROM": "20",
  "FILTER": Array [
    "PASS",
  ],
  "ID": Array [
    "rs6054257",
  ],
  "POS": 14370,
  "QUAL": 29,
  "REF": "G",
  "fields": Array [
    "20",
    "14370",
    "rs6054257",
    "G",
    "A",
    "29",
    "PASS",
    "NS=3;DP=14;AF=0.5;DB;H2",
    "GT:GQ:DP:HQ",
  ],
  "parser": VCF {
    "metadata": Object {
      "ALT": Object {
        "*": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "CNV": Object {
          "Description": "Copy number variable region (may be both deletion and duplication)",
        },
        "DEL": Object {
          "Description": "Deletion relative to the reference",
        },
        "DEL:ME": Object {
          "Description": "Deletion of mobile element relative to the reference",
        },
        "DUP": Object {
          "Description": "Region of elevated copy number relative to the reference",
        },
        "DUP:TANDEM": Object {
          "Description": "Tandem duplication",
        },
        "INS": Object {
          "Description": "Insertion of novel sequence relative to the reference",
        },
        "INS:ME": Object {
          "Description": "Insertion of a mobile element relative to the reference",
        },
        "INV": Object {
          "Description": "Inversion of reference sequence",
        },
        "NON_REF": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
      },
      "FILTER": Object {
        "PASS": Object {
          "Description": "Passed all filters",
        },
        "undefined": Object {
          "0": "s",
          "1": "5",
          "2": "0",
          "Number": undefined,
        },
      },
      "FORMAT": Object {
        "AD": Object {
          "Description": "Read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "DP": Object {
          "Description": "Read depth",
          "Number": 1,
          "Type": "Integer",
        },
        "EC": Object {
          "Description": "Expected alternate allele counts",
          "Number": "A",
          "Type": "Integer",
        },
        "FT": Object {
          "Description": "Filter indicating if this genotype was \\"called\\"",
          "Number": 1,
          "Type": "String",
        },
        "GL": Object {
          "Description": "Genotype likelihoods",
          "Number": "G",
          "Type": "Float",
        },
        "GP": Object {
          "Description": "Genotype posterior probabilities",
          "Number": "G",
          "Type": "Float",
        },
        "GQ": Object {
          "Description": "Conditional genotype quality",
          "Number": 1,
          "Type": "Integer",
        },
        "GT": Object {
          "Description": "Genotype",
          "Number": 1,
          "Type": "String",
        },
        "HQ": Object {
          "Description": "Haplotype quality",
          "Number": 2,
          "Type": "Integer",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PL": Object {
          "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
          "Number": "G",
          "Type": "Integer",
        },
        "PQ": Object {
          "Description": "Phasing quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PS": Object {
          "Description": "Phase set",
          "Number": 1,
          "Type": "Integer",
        },
        "undefined": Object {
          "0": "T",
          "1": "E",
          "2": "S",
          "3": "T",
          "Number": 1,
        },
      },
      "INFO": Object {
        "1000G": Object {
          "Description": "1000 Genomes membership",
          "Number": 0,
          "Type": "Flag",
        },
        "AA": Object {
          "Description": "Ancestral allele",
          "Number": 1,
          "Type": "String",
        },
        "AC": Object {
          "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
          "Number": "A",
          "Type": "Integer",
        },
        "AD": Object {
          "Description": "Total read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "AF": Object {
          "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
          "Number": "A",
          "Type": "Float",
        },
        "AN": Object {
          "Description": "Total number of alleles in called genotypes",
          "Number": 1,
          "Type": "Integer",
        },
        "BKPTID": Object {
          "Description": "ID of the assembled alternate allele in the assembly file",
          "Type": "String",
        },
        "BQ": Object {
          "Description": "RMS base quality",
          "Number": 1,
          "Type": "Float",
        },
        "CICN": Object {
          "Description": "Confidence interval around copy number for the segment",
          "Number": 2,
          "Type": "Integer",
        },
        "CICNADJ": Object {
          "Description": "Confidence interval around copy number for the adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "CIEND": Object {
          "Description": "Confidence interval around END for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CIGAR": Object {
          "Description": "Cigar string describing how to align an alternate allele to the reference allele",
          "Number": 1,
          "Type": "Float",
        },
        "CILEN": Object {
          "Description": "Confidence interval around the inserted material between breakend",
          "Number": 2,
          "Type": "Integer",
        },
        "CIPOS": Object {
          "Description": "Confidence interval around POS for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CN": Object {
          "Description": "Copy number of segment containing breakend",
          "Number": 1,
          "Type": "Integer",
        },
        "CNADJ": Object {
          "Description": "Copy number of adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "DB": Object {
          "Description": "dbSNP membership",
          "Number": 0,
          "Type": "Flag",
        },
        "DBRIPID": Object {
          "Description": "ID of this element in DBRIP",
          "Number": 1,
          "Type": "String",
        },
        "DBVARID": Object {
          "Description": "ID of this element in DBVAR",
          "Number": 1,
          "Type": "String",
        },
        "DGVID": Object {
          "Description": "ID of this element in Database of Genomic Variation",
          "Number": 1,
          "Type": "String",
        },
        "DP": Object {
          "Description": "combined depth across samples",
          "Number": 1,
          "Type": "Integer",
        },
        "DPADJ": Object {
          "Description": "Read Depth of adjacency",
          "Type": "Integer",
        },
        "END": Object {
          "Description": "End position (for use with symbolic alleles)",
          "Number": 1,
          "Type": "Integer",
        },
        "EVENT": Object {
          "Description": "ID of event associated to breakend",
          "Number": 1,
          "Type": "String",
        },
        "H2": Object {
          "Description": "HapMap2 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "H3": Object {
          "Description": "HapMap3 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "HOMLEN": Object {
          "Description": "Length of base pair identical micro-homology at event breakpoints",
          "Type": "Integer",
        },
        "HOMSEQ": Object {
          "Description": "Sequence of base pair identical micro-homology at event breakpoints",
          "Type": "String",
        },
        "IMPRECISE": Object {
          "Description": "Imprecise structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "MATEID": Object {
          "Description": "ID of mate breakends",
          "Number": null,
          "Type": "String",
        },
        "MEINFO": Object {
          "Description": "Mobile element info of the form NAME,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "METRANS": Object {
          "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": null,
        },
        "MQ0": Object {
          "Description": "Number of MAPQ == 0 reads",
          "Number": 1,
          "Type": "Integer",
        },
        "NOVEL": Object {
          "Description": "Indicates a novel structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "NS": Object {
          "Description": "Number of samples with data",
          "Number": 1,
          "Type": "Integer",
        },
        "PARID": Object {
          "Description": "ID of partner breakend",
          "Number": 1,
          "Type": "String",
        },
        "SB": Object {
          "Description": "Strand bias",
          "Number": 4,
          "Type": "Integer",
        },
        "SOMATIC": Object {
          "Description": "Somatic mutation (for cancer genomics)",
          "Number": 0,
          "Type": "Flag",
        },
        "SVLEN": Object {
          "Description": "Difference in length between REF and ALT alleles",
          "Number": null,
          "Type": "Integer",
        },
        "SVTYPE": Object {
          "Description": "Type of structural variant",
          "Number": 1,
          "Type": "String",
        },
        "VALIDATED": Object {
          "Description": "Validated by follow-up experiment",
          "Number": 0,
          "Type": "Flag",
        },
        "undefined": Object {
          "0": "S",
          "1": "V",
          "2": "T",
          "3": "Y",
          "4": "P",
          "5": "E",
          "Number": 1,
        },
      },
      "contig": Object {
        "undefined": Object {
          "0": "2",
          "1": "0",
          "Number": undefined,
        },
      },
      "fileDate": "20090805",
      "fileformat": "VCFv4.3",
      "phasing": "partial",
      "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
      "source": "myImputationProgramV3.1",
    },
    "samples": Array [
      "NA00001",
      "NA00002",
      "NA00003",
    ],
    "strict": true,
  },
  "rest": "0|0:48:1:51,51	1|0:48:8:51,51	1/1:43:5:.,.",
  "that": [Circular],
}
`;

exports[`VCF parser can parse a line from the VCF spec 2`] = `
Object {
  "NA00001": Object {
    "DP": undefined,
    "GQ": undefined,
    "GT": undefined,
    "HQ": undefined,
  },
  "NA00002": Object {
    "DP": undefined,
    "GQ": undefined,
    "GT": undefined,
    "HQ": undefined,
  },
  "NA00003": Object {
    "DP": undefined,
    "GQ": undefined,
    "GT": undefined,
    "HQ": undefined,
  },
}
`;

exports[`VCF parser can parse a line with minimal entries 1`] = `
Variant {
  "ALT": Array [
    "A",
  ],
  "CHROM": "20",
  "FILTER": null,
  "ID": null,
  "POS": 14370,
  "QUAL": null,
  "REF": "G",
  "fields": Array [
    "20",
    "14370",
    ".",
    "G",
    "A",
    ".",
    ".",
    ".",
    "GT:GQ:DP:HQ",
  ],
  "parser": VCF {
    "metadata": Object {
      "ALT": Object {
        "*": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "CNV": Object {
          "Description": "Copy number variable region (may be both deletion and duplication)",
        },
        "DEL": Object {
          "Description": "Deletion relative to the reference",
        },
        "DEL:ME": Object {
          "Description": "Deletion of mobile element relative to the reference",
        },
        "DUP": Object {
          "Description": "Region of elevated copy number relative to the reference",
        },
        "DUP:TANDEM": Object {
          "Description": "Tandem duplication",
        },
        "INS": Object {
          "Description": "Insertion of novel sequence relative to the reference",
        },
        "INS:ME": Object {
          "Description": "Insertion of a mobile element relative to the reference",
        },
        "INV": Object {
          "Description": "Inversion of reference sequence",
        },
        "NON_REF": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
      },
      "FILTER": Object {
        "PASS": Object {
          "Description": "Passed all filters",
        },
        "undefined": Object {
          "0": "s",
          "1": "5",
          "2": "0",
          "Number": undefined,
        },
      },
      "FORMAT": Object {
        "AD": Object {
          "Description": "Read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "DP": Object {
          "Description": "Read depth",
          "Number": 1,
          "Type": "Integer",
        },
        "EC": Object {
          "Description": "Expected alternate allele counts",
          "Number": "A",
          "Type": "Integer",
        },
        "FT": Object {
          "Description": "Filter indicating if this genotype was \\"called\\"",
          "Number": 1,
          "Type": "String",
        },
        "GL": Object {
          "Description": "Genotype likelihoods",
          "Number": "G",
          "Type": "Float",
        },
        "GP": Object {
          "Description": "Genotype posterior probabilities",
          "Number": "G",
          "Type": "Float",
        },
        "GQ": Object {
          "Description": "Conditional genotype quality",
          "Number": 1,
          "Type": "Integer",
        },
        "GT": Object {
          "Description": "Genotype",
          "Number": 1,
          "Type": "String",
        },
        "HQ": Object {
          "Description": "Haplotype quality",
          "Number": 2,
          "Type": "Integer",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PL": Object {
          "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
          "Number": "G",
          "Type": "Integer",
        },
        "PQ": Object {
          "Description": "Phasing quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PS": Object {
          "Description": "Phase set",
          "Number": 1,
          "Type": "Integer",
        },
        "undefined": Object {
          "0": "T",
          "1": "E",
          "2": "S",
          "3": "T",
          "Number": 1,
        },
      },
      "INFO": Object {
        "1000G": Object {
          "Description": "1000 Genomes membership",
          "Number": 0,
          "Type": "Flag",
        },
        "AA": Object {
          "Description": "Ancestral allele",
          "Number": 1,
          "Type": "String",
        },
        "AC": Object {
          "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
          "Number": "A",
          "Type": "Integer",
        },
        "AD": Object {
          "Description": "Total read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "AF": Object {
          "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
          "Number": "A",
          "Type": "Float",
        },
        "AN": Object {
          "Description": "Total number of alleles in called genotypes",
          "Number": 1,
          "Type": "Integer",
        },
        "BKPTID": Object {
          "Description": "ID of the assembled alternate allele in the assembly file",
          "Type": "String",
        },
        "BQ": Object {
          "Description": "RMS base quality",
          "Number": 1,
          "Type": "Float",
        },
        "CICN": Object {
          "Description": "Confidence interval around copy number for the segment",
          "Number": 2,
          "Type": "Integer",
        },
        "CICNADJ": Object {
          "Description": "Confidence interval around copy number for the adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "CIEND": Object {
          "Description": "Confidence interval around END for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CIGAR": Object {
          "Description": "Cigar string describing how to align an alternate allele to the reference allele",
          "Number": 1,
          "Type": "Float",
        },
        "CILEN": Object {
          "Description": "Confidence interval around the inserted material between breakend",
          "Number": 2,
          "Type": "Integer",
        },
        "CIPOS": Object {
          "Description": "Confidence interval around POS for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CN": Object {
          "Description": "Copy number of segment containing breakend",
          "Number": 1,
          "Type": "Integer",
        },
        "CNADJ": Object {
          "Description": "Copy number of adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "DB": Object {
          "Description": "dbSNP membership",
          "Number": 0,
          "Type": "Flag",
        },
        "DBRIPID": Object {
          "Description": "ID of this element in DBRIP",
          "Number": 1,
          "Type": "String",
        },
        "DBVARID": Object {
          "Description": "ID of this element in DBVAR",
          "Number": 1,
          "Type": "String",
        },
        "DGVID": Object {
          "Description": "ID of this element in Database of Genomic Variation",
          "Number": 1,
          "Type": "String",
        },
        "DP": Object {
          "Description": "combined depth across samples",
          "Number": 1,
          "Type": "Integer",
        },
        "DPADJ": Object {
          "Description": "Read Depth of adjacency",
          "Type": "Integer",
        },
        "END": Object {
          "Description": "End position (for use with symbolic alleles)",
          "Number": 1,
          "Type": "Integer",
        },
        "EVENT": Object {
          "Description": "ID of event associated to breakend",
          "Number": 1,
          "Type": "String",
        },
        "H2": Object {
          "Description": "HapMap2 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "H3": Object {
          "Description": "HapMap3 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "HOMLEN": Object {
          "Description": "Length of base pair identical micro-homology at event breakpoints",
          "Type": "Integer",
        },
        "HOMSEQ": Object {
          "Description": "Sequence of base pair identical micro-homology at event breakpoints",
          "Type": "String",
        },
        "IMPRECISE": Object {
          "Description": "Imprecise structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "MATEID": Object {
          "Description": "ID of mate breakends",
          "Number": null,
          "Type": "String",
        },
        "MEINFO": Object {
          "Description": "Mobile element info of the form NAME,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "METRANS": Object {
          "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": null,
        },
        "MQ0": Object {
          "Description": "Number of MAPQ == 0 reads",
          "Number": 1,
          "Type": "Integer",
        },
        "NOVEL": Object {
          "Description": "Indicates a novel structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "NS": Object {
          "Description": "Number of samples with data",
          "Number": 1,
          "Type": "Integer",
        },
        "PARID": Object {
          "Description": "ID of partner breakend",
          "Number": 1,
          "Type": "String",
        },
        "SB": Object {
          "Description": "Strand bias",
          "Number": 4,
          "Type": "Integer",
        },
        "SOMATIC": Object {
          "Description": "Somatic mutation (for cancer genomics)",
          "Number": 0,
          "Type": "Flag",
        },
        "SVLEN": Object {
          "Description": "Difference in length between REF and ALT alleles",
          "Number": null,
          "Type": "Integer",
        },
        "SVTYPE": Object {
          "Description": "Type of structural variant",
          "Number": 1,
          "Type": "String",
        },
        "VALIDATED": Object {
          "Description": "Validated by follow-up experiment",
          "Number": 0,
          "Type": "Flag",
        },
        "undefined": Object {
          "0": "S",
          "1": "V",
          "2": "T",
          "3": "Y",
          "4": "P",
          "5": "E",
          "Number": 1,
        },
      },
      "contig": Object {
        "undefined": Object {
          "0": "2",
          "1": "0",
          "Number": undefined,
        },
      },
      "fileDate": "20090805",
      "fileformat": "VCFv4.3",
      "phasing": "partial",
      "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
      "source": "myImputationProgramV3.1",
    },
    "samples": Array [
      "NA00001",
      "NA00002",
      "NA00003",
    ],
    "strict": true,
  },
  "rest": ".	.	.",
  "that": [Circular],
}
`;

exports[`VCF parser can parse a line with minimal entries 2`] = `
Object {
  "NA00001": Object {
    "DP": null,
    "GQ": null,
    "GT": null,
    "HQ": null,
  },
  "NA00002": Object {
    "DP": null,
    "GQ": null,
    "GT": null,
    "HQ": null,
  },
  "NA00003": Object {
    "DP": null,
    "GQ": null,
    "GT": null,
    "HQ": null,
  },
}
`;

exports[`VCF parser for Y chrom (haploid) can parse a line from the VCF spec 1`] = `
Variant {
  "ALT": Array [
    "<CN0>",
  ],
  "CHROM": "Y",
  "FILTER": Array [
    "PASS",
  ],
  "ID": Array [
    "CNV_Y_14483990_15232198",
  ],
  "POS": 14483990,
  "QUAL": 100,
  "REF": "C",
  "fields": Array [
    "Y",
    "14483990",
    "CNV_Y_14483990_15232198",
    "C",
    "<CN0>",
    "100",
    "PASS",
    "AC=1;AF=0.000817661;AN=1223;END=15232198;NS=1233;SVTYPE=CNV;AMR_AF=0;AFR_AF=0;EUR_AF=0.0042;SAS_AF=0;EAS_AF=0;VT=SV;EX_TARGET",
    "GT:CN:CNL:CNP:CNQ:GP:GQ:PL",
  ],
  "parser": VCF {
    "metadata": Object {
      "ALT": Object {
        "*": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "CNV": Object {
          "Description": "Copy number variable region (may be both deletion and duplication)",
        },
        "DEL": Object {
          "Description": "Deletion relative to the reference",
        },
        "DEL:ME": Object {
          "Description": "Deletion of mobile element relative to the reference",
        },
        "DUP": Object {
          "Description": "Region of elevated copy number relative to the reference",
        },
        "DUP:TANDEM": Object {
          "Description": "Tandem duplication",
        },
        "INS": Object {
          "Description": "Insertion of novel sequence relative to the reference",
        },
        "INS:ME": Object {
          "Description": "Insertion of a mobile element relative to the reference",
        },
        "INV": Object {
          "Description": "Inversion of reference sequence",
        },
        "NON_REF": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "undefined": Object {
          "0": "C",
          "1": "N",
          "2": "V",
          "Number": undefined,
        },
      },
      "FILTER": Object {
        "PASS": Object {
          "Description": "Passed all filters",
        },
        "undefined": Object {
          "0": "N",
          "1": "O",
          "2": "N",
          "3": "V",
          "4": "A",
          "5": "R",
          "6": "I",
          "7": "A",
          "8": "N",
          "9": "T",
          "Number": undefined,
        },
      },
      "FORMAT": Object {
        "AD": Object {
          "Description": "Read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "DP": Object {
          "Description": "Read depth",
          "Number": 1,
          "Type": "Integer",
        },
        "EC": Object {
          "Description": "Expected alternate allele counts",
          "Number": "A",
          "Type": "Integer",
        },
        "FT": Object {
          "Description": "Filter indicating if this genotype was \\"called\\"",
          "Number": 1,
          "Type": "String",
        },
        "GL": Object {
          "Description": "Genotype likelihoods",
          "Number": "G",
          "Type": "Float",
        },
        "GP": Object {
          "Description": "Genotype posterior probabilities",
          "Number": "G",
          "Type": "Float",
        },
        "GQ": Object {
          "Description": "Conditional genotype quality",
          "Number": 1,
          "Type": "Integer",
        },
        "GT": Object {
          "Description": "Genotype",
          "Number": 1,
          "Type": "String",
        },
        "HQ": Object {
          "Description": "Haplotype quality",
          "Number": 2,
          "Type": "Integer",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PL": Object {
          "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
          "Number": "G",
          "Type": "Integer",
        },
        "PQ": Object {
          "Description": "Phasing quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PS": Object {
          "Description": "Phase set",
          "Number": 1,
          "Type": "Integer",
        },
        "undefined": Object {
          "0": "P",
          "1": "L",
          "Number": undefined,
        },
      },
      "INFO": Object {
        "1000G": Object {
          "Description": "1000 Genomes membership",
          "Number": 0,
          "Type": "Flag",
        },
        "AA": Object {
          "Description": "Ancestral allele",
          "Number": 1,
          "Type": "String",
        },
        "AC": Object {
          "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
          "Number": "A",
          "Type": "Integer",
        },
        "AD": Object {
          "Description": "Total read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "AF": Object {
          "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
          "Number": "A",
          "Type": "Float",
        },
        "AN": Object {
          "Description": "Total number of alleles in called genotypes",
          "Number": 1,
          "Type": "Integer",
        },
        "BKPTID": Object {
          "Description": "ID of the assembled alternate allele in the assembly file",
          "Type": "String",
        },
        "BQ": Object {
          "Description": "RMS base quality",
          "Number": 1,
          "Type": "Float",
        },
        "CICN": Object {
          "Description": "Confidence interval around copy number for the segment",
          "Number": 2,
          "Type": "Integer",
        },
        "CICNADJ": Object {
          "Description": "Confidence interval around copy number for the adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "CIEND": Object {
          "Description": "Confidence interval around END for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CIGAR": Object {
          "Description": "Cigar string describing how to align an alternate allele to the reference allele",
          "Number": 1,
          "Type": "Float",
        },
        "CILEN": Object {
          "Description": "Confidence interval around the inserted material between breakend",
          "Number": 2,
          "Type": "Integer",
        },
        "CIPOS": Object {
          "Description": "Confidence interval around POS for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CN": Object {
          "Description": "Copy number of segment containing breakend",
          "Number": 1,
          "Type": "Integer",
        },
        "CNADJ": Object {
          "Description": "Copy number of adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "DB": Object {
          "Description": "dbSNP membership",
          "Number": 0,
          "Type": "Flag",
        },
        "DBRIPID": Object {
          "Description": "ID of this element in DBRIP",
          "Number": 1,
          "Type": "String",
        },
        "DBVARID": Object {
          "Description": "ID of this element in DBVAR",
          "Number": 1,
          "Type": "String",
        },
        "DGVID": Object {
          "Description": "ID of this element in Database of Genomic Variation",
          "Number": 1,
          "Type": "String",
        },
        "DP": Object {
          "Description": "combined depth across samples",
          "Number": 1,
          "Type": "Integer",
        },
        "DPADJ": Object {
          "Description": "Read Depth of adjacency",
          "Type": "Integer",
        },
        "END": Object {
          "Description": "End position (for use with symbolic alleles)",
          "Number": 1,
          "Type": "Integer",
        },
        "EVENT": Object {
          "Description": "ID of event associated to breakend",
          "Number": 1,
          "Type": "String",
        },
        "H2": Object {
          "Description": "HapMap2 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "H3": Object {
          "Description": "HapMap3 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "HOMLEN": Object {
          "Description": "Length of base pair identical micro-homology at event breakpoints",
          "Type": "Integer",
        },
        "HOMSEQ": Object {
          "Description": "Sequence of base pair identical micro-homology at event breakpoints",
          "Type": "String",
        },
        "IMPRECISE": Object {
          "Description": "Imprecise structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "MATEID": Object {
          "Description": "ID of mate breakends",
          "Number": null,
          "Type": "String",
        },
        "MEINFO": Object {
          "Description": "Mobile element info of the form NAME,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "METRANS": Object {
          "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": null,
        },
        "MQ0": Object {
          "Description": "Number of MAPQ == 0 reads",
          "Number": 1,
          "Type": "Integer",
        },
        "NOVEL": Object {
          "Description": "Indicates a novel structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "NS": Object {
          "Description": "Number of samples with data",
          "Number": 1,
          "Type": "Integer",
        },
        "PARID": Object {
          "Description": "ID of partner breakend",
          "Number": 1,
          "Type": "String",
        },
        "SB": Object {
          "Description": "Strand bias",
          "Number": 4,
          "Type": "Integer",
        },
        "SOMATIC": Object {
          "Description": "Somatic mutation (for cancer genomics)",
          "Number": 0,
          "Type": "Flag",
        },
        "SVLEN": Object {
          "Description": "Difference in length between REF and ALT alleles",
          "Number": null,
          "Type": "Integer",
        },
        "SVTYPE": Object {
          "Description": "Type of structural variant",
          "Number": 1,
          "Type": "String",
        },
        "VALIDATED": Object {
          "Description": "Validated by follow-up experiment",
          "Number": 0,
          "Type": "Flag",
        },
        "undefined": Object {
          "0": "M",
          "1": "U",
          "10": "L",
          "11": "I",
          "12": "C",
          "2": "L",
          "3": "T",
          "4": "I",
          "5": "_",
          "6": "A",
          "7": "L",
          "8": "L",
          "9": "E",
          "Number": 0,
        },
      },
      "contig": Object {
        "undefined": Object {
          "0": "Y",
          "Number": undefined,
        },
      },
      "fileDate": "20150218",
      "fileformat": "VCFv4.1",
      "reference": "ftp://ftp.1000genomes.ebi.ac.uk//vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz",
      "source": "GenomeSTRiP_v1.04",
    },
    "samples": Array [
      "HG00096",
      "HG00101",
      "HG00103",
      "HG001055",
    ],
    "strict": true,
  },
  "rest": "0:1:-1000,0,-119.08:-1000,0,-218.16:99:0,-1000:99:0,10000	0:1:-1000,0,-43.56:-1000,0,-142.64:99:0,-1000:99:0,10000	.:.:.:.:.:.:.:.	.:.:.:.:.:.:.:.",
  "that": [Circular],
}
`;

exports[`VCF parser for Y chrom (haploid) can parse a line from the VCF spec 2`] = `
Object {
  "HG00096": Object {
    "CN": undefined,
    "CNL": undefined,
    "CNP": undefined,
    "CNQ": undefined,
    "GP": undefined,
    "GQ": undefined,
    "GT": undefined,
    "PL": undefined,
  },
  "HG00101": Object {
    "CN": undefined,
    "CNL": undefined,
    "CNP": undefined,
    "CNQ": undefined,
    "GP": undefined,
    "GQ": undefined,
    "GT": undefined,
    "PL": undefined,
  },
  "HG00103": Object {
    "CN": null,
    "CNL": null,
    "CNP": null,
    "CNQ": null,
    "GP": null,
    "GQ": null,
    "GT": null,
    "PL": null,
  },
  "HG001055": Object {
    "CN": null,
    "CNL": null,
    "CNP": null,
    "CNQ": null,
    "GP": null,
    "GQ": null,
    "GT": null,
    "PL": null,
  },
}
`;

exports[`VCF parser for Y chrom (haploid) can parse a line from the VCF spec 3`] = `
Variant {
  "ALT": Array [
    "A",
  ],
  "CHROM": "Y",
  "FILTER": Array [
    "PASS",
  ],
  "ID": Array [
    "rs11575897",
  ],
  "POS": 2655180,
  "QUAL": 100,
  "REF": "G",
  "fields": Array [
    "Y",
    "2655180",
    "rs11575897",
    "G",
    "A",
    "100",
    "PASS",
    "AA=G;AC=22;AF=0.0178427;AN=1233;DP=84761;NS=1233;AMR_AF=0;AFR_AF=0;EUR_AF=0;SAS_AF=0;EAS_AF=0.0902;VT=SNP;EX_TARGET",
    "GT",
  ],
  "parser": VCF {
    "metadata": Object {
      "ALT": Object {
        "*": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "CNV": Object {
          "Description": "Copy number variable region (may be both deletion and duplication)",
        },
        "DEL": Object {
          "Description": "Deletion relative to the reference",
        },
        "DEL:ME": Object {
          "Description": "Deletion of mobile element relative to the reference",
        },
        "DUP": Object {
          "Description": "Region of elevated copy number relative to the reference",
        },
        "DUP:TANDEM": Object {
          "Description": "Tandem duplication",
        },
        "INS": Object {
          "Description": "Insertion of novel sequence relative to the reference",
        },
        "INS:ME": Object {
          "Description": "Insertion of a mobile element relative to the reference",
        },
        "INV": Object {
          "Description": "Inversion of reference sequence",
        },
        "NON_REF": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "undefined": Object {
          "0": "C",
          "1": "N",
          "2": "V",
          "Number": undefined,
        },
      },
      "FILTER": Object {
        "PASS": Object {
          "Description": "Passed all filters",
        },
        "undefined": Object {
          "0": "N",
          "1": "O",
          "2": "N",
          "3": "V",
          "4": "A",
          "5": "R",
          "6": "I",
          "7": "A",
          "8": "N",
          "9": "T",
          "Number": undefined,
        },
      },
      "FORMAT": Object {
        "AD": Object {
          "Description": "Read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "DP": Object {
          "Description": "Read depth",
          "Number": 1,
          "Type": "Integer",
        },
        "EC": Object {
          "Description": "Expected alternate allele counts",
          "Number": "A",
          "Type": "Integer",
        },
        "FT": Object {
          "Description": "Filter indicating if this genotype was \\"called\\"",
          "Number": 1,
          "Type": "String",
        },
        "GL": Object {
          "Description": "Genotype likelihoods",
          "Number": "G",
          "Type": "Float",
        },
        "GP": Object {
          "Description": "Genotype posterior probabilities",
          "Number": "G",
          "Type": "Float",
        },
        "GQ": Object {
          "Description": "Conditional genotype quality",
          "Number": 1,
          "Type": "Integer",
        },
        "GT": Object {
          "Description": "Genotype",
          "Number": 1,
          "Type": "String",
        },
        "HQ": Object {
          "Description": "Haplotype quality",
          "Number": 2,
          "Type": "Integer",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PL": Object {
          "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
          "Number": "G",
          "Type": "Integer",
        },
        "PQ": Object {
          "Description": "Phasing quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PS": Object {
          "Description": "Phase set",
          "Number": 1,
          "Type": "Integer",
        },
        "undefined": Object {
          "0": "P",
          "1": "L",
          "Number": undefined,
        },
      },
      "INFO": Object {
        "1000G": Object {
          "Description": "1000 Genomes membership",
          "Number": 0,
          "Type": "Flag",
        },
        "AA": Object {
          "Description": "Ancestral allele",
          "Number": 1,
          "Type": "String",
        },
        "AC": Object {
          "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
          "Number": "A",
          "Type": "Integer",
        },
        "AD": Object {
          "Description": "Total read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "AF": Object {
          "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
          "Number": "A",
          "Type": "Float",
        },
        "AN": Object {
          "Description": "Total number of alleles in called genotypes",
          "Number": 1,
          "Type": "Integer",
        },
        "BKPTID": Object {
          "Description": "ID of the assembled alternate allele in the assembly file",
          "Type": "String",
        },
        "BQ": Object {
          "Description": "RMS base quality",
          "Number": 1,
          "Type": "Float",
        },
        "CICN": Object {
          "Description": "Confidence interval around copy number for the segment",
          "Number": 2,
          "Type": "Integer",
        },
        "CICNADJ": Object {
          "Description": "Confidence interval around copy number for the adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "CIEND": Object {
          "Description": "Confidence interval around END for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CIGAR": Object {
          "Description": "Cigar string describing how to align an alternate allele to the reference allele",
          "Number": 1,
          "Type": "Float",
        },
        "CILEN": Object {
          "Description": "Confidence interval around the inserted material between breakend",
          "Number": 2,
          "Type": "Integer",
        },
        "CIPOS": Object {
          "Description": "Confidence interval around POS for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CN": Object {
          "Description": "Copy number of segment containing breakend",
          "Number": 1,
          "Type": "Integer",
        },
        "CNADJ": Object {
          "Description": "Copy number of adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "DB": Object {
          "Description": "dbSNP membership",
          "Number": 0,
          "Type": "Flag",
        },
        "DBRIPID": Object {
          "Description": "ID of this element in DBRIP",
          "Number": 1,
          "Type": "String",
        },
        "DBVARID": Object {
          "Description": "ID of this element in DBVAR",
          "Number": 1,
          "Type": "String",
        },
        "DGVID": Object {
          "Description": "ID of this element in Database of Genomic Variation",
          "Number": 1,
          "Type": "String",
        },
        "DP": Object {
          "Description": "combined depth across samples",
          "Number": 1,
          "Type": "Integer",
        },
        "DPADJ": Object {
          "Description": "Read Depth of adjacency",
          "Type": "Integer",
        },
        "END": Object {
          "Description": "End position (for use with symbolic alleles)",
          "Number": 1,
          "Type": "Integer",
        },
        "EVENT": Object {
          "Description": "ID of event associated to breakend",
          "Number": 1,
          "Type": "String",
        },
        "H2": Object {
          "Description": "HapMap2 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "H3": Object {
          "Description": "HapMap3 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "HOMLEN": Object {
          "Description": "Length of base pair identical micro-homology at event breakpoints",
          "Type": "Integer",
        },
        "HOMSEQ": Object {
          "Description": "Sequence of base pair identical micro-homology at event breakpoints",
          "Type": "String",
        },
        "IMPRECISE": Object {
          "Description": "Imprecise structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "MATEID": Object {
          "Description": "ID of mate breakends",
          "Number": null,
          "Type": "String",
        },
        "MEINFO": Object {
          "Description": "Mobile element info of the form NAME,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "METRANS": Object {
          "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": null,
        },
        "MQ0": Object {
          "Description": "Number of MAPQ == 0 reads",
          "Number": 1,
          "Type": "Integer",
        },
        "NOVEL": Object {
          "Description": "Indicates a novel structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "NS": Object {
          "Description": "Number of samples with data",
          "Number": 1,
          "Type": "Integer",
        },
        "PARID": Object {
          "Description": "ID of partner breakend",
          "Number": 1,
          "Type": "String",
        },
        "SB": Object {
          "Description": "Strand bias",
          "Number": 4,
          "Type": "Integer",
        },
        "SOMATIC": Object {
          "Description": "Somatic mutation (for cancer genomics)",
          "Number": 0,
          "Type": "Flag",
        },
        "SVLEN": Object {
          "Description": "Difference in length between REF and ALT alleles",
          "Number": null,
          "Type": "Integer",
        },
        "SVTYPE": Object {
          "Description": "Type of structural variant",
          "Number": 1,
          "Type": "String",
        },
        "VALIDATED": Object {
          "Description": "Validated by follow-up experiment",
          "Number": 0,
          "Type": "Flag",
        },
        "undefined": Object {
          "0": "M",
          "1": "U",
          "10": "L",
          "11": "I",
          "12": "C",
          "2": "L",
          "3": "T",
          "4": "I",
          "5": "_",
          "6": "A",
          "7": "L",
          "8": "L",
          "9": "E",
          "Number": 0,
        },
      },
      "contig": Object {
        "undefined": Object {
          "0": "Y",
          "Number": undefined,
        },
      },
      "fileDate": "20150218",
      "fileformat": "VCFv4.1",
      "reference": "ftp://ftp.1000genomes.ebi.ac.uk//vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz",
      "source": "GenomeSTRiP_v1.04",
    },
    "samples": Array [
      "HG00096",
      "HG00101",
      "HG00103",
      "HG001055",
    ],
    "strict": true,
  },
  "rest": "0	0	0	.",
  "that": [Circular],
}
`;

exports[`VCF parser for Y chrom (haploid) can parse a line from the VCF spec 4`] = `
Object {
  "HG00096": Object {
    "GT": undefined,
  },
  "HG00101": Object {
    "GT": undefined,
  },
  "HG00103": Object {
    "GT": undefined,
  },
  "HG001055": Object {
    "GT": null,
  },
}
`;

exports[`VCF parser for structural variants can parse a line from the VCF spec 1`] = `
Variant {
  "ALT": Array [
    "<DEL>",
  ],
  "CHROM": "8",
  "FILTER": Array [
    "PASS",
  ],
  "ID": Array [
    "28329_0",
  ],
  "POS": 17709115,
  "QUAL": null,
  "REF": "N",
  "fields": Array [
    "8",
    "17709115",
    "28329_0",
    "N",
    "<DEL>",
    ".",
    "PASS",
    "PRECISE;SVMETHOD=Snifflesv1.0.3;CHR2=8;END=17709148;STD_quant_start=0.000000;STD_quant_stop=0.000000;Kurtosis_quant_start=20.524521;Kurtosis_quant_stop=3.925926;SVTYPE=DEL;SUPTYPE=AL;SVLEN=33;STRANDS=+-;STRANDS2=20,14,20,14;RE=34;AF=0.971429",
    "GT:DR:DV",
  ],
  "parser": VCF {
    "metadata": Object {
      "ALT": Object {
        "*": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "CNV": Object {
          "Description": "Copy number variable region (may be both deletion and duplication)",
        },
        "DEL": Object {
          "Description": "Deletion relative to the reference",
        },
        "DEL:ME": Object {
          "Description": "Deletion of mobile element relative to the reference",
        },
        "DUP": Object {
          "Description": "Region of elevated copy number relative to the reference",
        },
        "DUP:TANDEM": Object {
          "Description": "Tandem duplication",
        },
        "INS": Object {
          "Description": "Insertion of novel sequence relative to the reference",
        },
        "INS:ME": Object {
          "Description": "Insertion of a mobile element relative to the reference",
        },
        "INV": Object {
          "Description": "Inversion of reference sequence",
        },
        "NON_REF": Object {
          "Description": "Represents any possible alternative allele at this location",
        },
        "undefined": Object {
          "0": "I",
          "1": "N",
          "2": "S",
          "Number": undefined,
        },
      },
      "FILTER": Object {
        "PASS": Object {
          "Description": "Passed all filters",
        },
      },
      "FORMAT": Object {
        "AD": Object {
          "Description": "Read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "DP": Object {
          "Description": "Read depth",
          "Number": 1,
          "Type": "Integer",
        },
        "EC": Object {
          "Description": "Expected alternate allele counts",
          "Number": "A",
          "Type": "Integer",
        },
        "FT": Object {
          "Description": "Filter indicating if this genotype was \\"called\\"",
          "Number": 1,
          "Type": "String",
        },
        "GL": Object {
          "Description": "Genotype likelihoods",
          "Number": "G",
          "Type": "Float",
        },
        "GP": Object {
          "Description": "Genotype posterior probabilities",
          "Number": "G",
          "Type": "Float",
        },
        "GQ": Object {
          "Description": "Conditional genotype quality",
          "Number": 1,
          "Type": "Integer",
        },
        "GT": Object {
          "Description": "Genotype",
          "Number": 1,
          "Type": "String",
        },
        "HQ": Object {
          "Description": "Haplotype quality",
          "Number": 2,
          "Type": "Integer",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PL": Object {
          "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
          "Number": "G",
          "Type": "Integer",
        },
        "PQ": Object {
          "Description": "Phasing quality",
          "Number": 1,
          "Type": "Integer",
        },
        "PS": Object {
          "Description": "Phase set",
          "Number": 1,
          "Type": "Integer",
        },
        "undefined": Object {
          "0": "D",
          "1": "V",
          "Number": 1,
        },
      },
      "INFO": Object {
        "1000G": Object {
          "Description": "1000 Genomes membership",
          "Number": 0,
          "Type": "Flag",
        },
        "AA": Object {
          "Description": "Ancestral allele",
          "Number": 1,
          "Type": "String",
        },
        "AC": Object {
          "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
          "Number": "A",
          "Type": "Integer",
        },
        "AD": Object {
          "Description": "Total read depth for each allele",
          "Number": "R",
          "Type": "Integer",
        },
        "ADF": Object {
          "Description": "Read depth for each allele on the forward strand",
          "Number": "R",
          "Type": "Integer",
        },
        "ADR": Object {
          "Description": "Read depth for each allele on the reverse strand",
          "Number": "R",
          "Type": "Integer",
        },
        "AF": Object {
          "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
          "Number": "A",
          "Type": "Float",
        },
        "AN": Object {
          "Description": "Total number of alleles in called genotypes",
          "Number": 1,
          "Type": "Integer",
        },
        "BKPTID": Object {
          "Description": "ID of the assembled alternate allele in the assembly file",
          "Type": "String",
        },
        "BQ": Object {
          "Description": "RMS base quality",
          "Number": 1,
          "Type": "Float",
        },
        "CICN": Object {
          "Description": "Confidence interval around copy number for the segment",
          "Number": 2,
          "Type": "Integer",
        },
        "CICNADJ": Object {
          "Description": "Confidence interval around copy number for the adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "CIEND": Object {
          "Description": "Confidence interval around END for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CIGAR": Object {
          "Description": "Cigar string describing how to align an alternate allele to the reference allele",
          "Number": 1,
          "Type": "Float",
        },
        "CILEN": Object {
          "Description": "Confidence interval around the inserted material between breakend",
          "Number": 2,
          "Type": "Integer",
        },
        "CIPOS": Object {
          "Description": "Confidence interval around POS for imprecise variants",
          "Number": 2,
          "Type": "Integer",
        },
        "CN": Object {
          "Description": "Copy number of segment containing breakend",
          "Number": 1,
          "Type": "Integer",
        },
        "CNADJ": Object {
          "Description": "Copy number of adjacency",
          "Number": null,
          "Type": "Integer",
        },
        "DB": Object {
          "Description": "dbSNP membership",
          "Number": 0,
          "Type": "Flag",
        },
        "DBRIPID": Object {
          "Description": "ID of this element in DBRIP",
          "Number": 1,
          "Type": "String",
        },
        "DBVARID": Object {
          "Description": "ID of this element in DBVAR",
          "Number": 1,
          "Type": "String",
        },
        "DGVID": Object {
          "Description": "ID of this element in Database of Genomic Variation",
          "Number": 1,
          "Type": "String",
        },
        "DP": Object {
          "Description": "combined depth across samples",
          "Number": 1,
          "Type": "Integer",
        },
        "DPADJ": Object {
          "Description": "Read Depth of adjacency",
          "Type": "Integer",
        },
        "END": Object {
          "Description": "End position (for use with symbolic alleles)",
          "Number": 1,
          "Type": "Integer",
        },
        "EVENT": Object {
          "Description": "ID of event associated to breakend",
          "Number": 1,
          "Type": "String",
        },
        "H2": Object {
          "Description": "HapMap2 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "H3": Object {
          "Description": "HapMap3 membership",
          "Number": 0,
          "Type": "Flag",
        },
        "HOMLEN": Object {
          "Description": "Length of base pair identical micro-homology at event breakpoints",
          "Type": "Integer",
        },
        "HOMSEQ": Object {
          "Description": "Sequence of base pair identical micro-homology at event breakpoints",
          "Type": "String",
        },
        "IMPRECISE": Object {
          "Description": "Imprecise structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "MATEID": Object {
          "Description": "ID of mate breakends",
          "Number": null,
          "Type": "String",
        },
        "MEINFO": Object {
          "Description": "Mobile element info of the form NAME,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "METRANS": Object {
          "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
          "Number": 4,
          "Type": "String",
        },
        "MQ": Object {
          "Description": "RMS mapping quality",
          "Number": 1,
          "Type": null,
        },
        "MQ0": Object {
          "Description": "Number of MAPQ == 0 reads",
          "Number": 1,
          "Type": "Integer",
        },
        "NOVEL": Object {
          "Description": "Indicates a novel structural variation",
          "Number": 0,
          "Type": "Flag",
        },
        "NS": Object {
          "Description": "Number of samples with data",
          "Number": 1,
          "Type": "Integer",
        },
        "PARID": Object {
          "Description": "ID of partner breakend",
          "Number": 1,
          "Type": "String",
        },
        "SB": Object {
          "Description": "Strand bias",
          "Number": 4,
          "Type": "Integer",
        },
        "SOMATIC": Object {
          "Description": "Somatic mutation (for cancer genomics)",
          "Number": 0,
          "Type": "Flag",
        },
        "SVLEN": Object {
          "Description": "Difference in length between REF and ALT alleles",
          "Number": null,
          "Type": "Integer",
        },
        "SVTYPE": Object {
          "Description": "Type of structural variant",
          "Number": 1,
          "Type": "String",
        },
        "VALIDATED": Object {
          "Description": "Validated by follow-up experiment",
          "Number": 0,
          "Type": "Flag",
        },
        "undefined": Object {
          "0": "S",
          "1": "V",
          "2": "T",
          "3": "Y",
          "4": "P",
          "5": "E",
          "Number": 1,
        },
      },
      "fileDate": "20170420",
      "fileformat": "VCFv4.2",
      "source": "Sniffles",
    },
    "samples": Array [
      "/seq/schatz/fritz/sv-paper/real/Nanopore_NA12878/mapped/ngm_Nanopore_human_ngmlr-0.2.3_mapped.bam",
    ],
    "strict": true,
  },
  "rest": "1/1:1:34",
  "that": [Circular],
}
`;

exports[`VCF parser for structural variants can parse a line from the VCF spec 2`] = `
Object {
  "/seq/schatz/fritz/sv-paper/real/Nanopore_NA12878/mapped/ngm_Nanopore_human_ngmlr-0.2.3_mapped.bam": Object {
    "DR": undefined,
    "DV": undefined,
    "GT": undefined,
  },
}
`;

exports[`can parse breakends 1`] = `
Array [
  Variant {
    "ALT": Array [
      "G]8:107653520]",
    ],
    "CHROM": "11",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "MantaBND:0:2:3:0:0:0:1",
    ],
    "POS": 94975747,
    "QUAL": null,
    "REF": "G",
    "fields": Array [
      "11",
      "94975747",
      "MantaBND:0:2:3:0:0:0:1",
      "G",
      "G]8:107653520]",
      ".",
      "PASS",
      "SVTYPE=BND;MATEID=MantaBND:0:2:3:0:0:0:0;CIPOS=0,2;HOMLEN=2;HOMSEQ=TT;BND_DEPTH=216;MATE_BND_DEPTH=735",
      "PR:SR",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "722,9:463,15",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "<DEL>",
    ],
    "CHROM": "11",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "MantaDEL:0:1:2:0:0:0",
    ],
    "POS": 94975753,
    "QUAL": null,
    "REF": "T",
    "fields": Array [
      "11",
      "94975753",
      "MantaDEL:0:1:2:0:0:0",
      "T",
      "<DEL>",
      ".",
      "PASS",
      "END=94987865;SVTYPE=DEL;SVLEN=12112;IMPRECISE;CIPOS=-156,156;CIEND=-150,150",
      "PR",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "161,13",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "T[8:107653411[",
    ],
    "CHROM": "11",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "MantaBND:0:0:1:0:0:0:0",
    ],
    "POS": 94987872,
    "QUAL": null,
    "REF": "T",
    "fields": Array [
      "11",
      "94987872",
      "MantaBND:0:0:1:0:0:0:0",
      "T",
      "T[8:107653411[",
      ".",
      "PASS",
      "SVTYPE=BND;MATEID=MantaBND:0:0:1:0:0:0:1;BND_DEPTH=171;MATE_BND_DEPTH=830",
      "PR:SR",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [
        "BAMs/caudaus.sorted.sam",
      ],
      "strict": true,
    },
    "rest": "489,4:520,19",
    "that": [Circular],
  },
]
`;

exports[`shortcut parsing with 1000 genomes 1`] = `
Array [
  "HG00096",
  "HG00101",
  "HG00103",
  "HG00105",
  "HG00107",
]
`;

exports[`shortcut parsing with 1000 genomes 2`] = `
Array [
  "NA21128",
  "NA21129",
  "NA21130",
  "NA21133",
  "NA21135",
]
`;

exports[`shortcut parsing with 1000 genomes 3`] = `
Array [
  Object {
    "ALT": Array [
      "A",
    ],
    "CHROM": "Y",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs11575897",
    ],
    "POS": 2655180,
    "QUAL": 100,
    "REF": "G",
    "fields": Array [
      "Y",
      "2655180",
      "rs11575897",
      "G",
      "A",
      "100",
      "PASS",
      "AA=G;AC=22;AF=0.0178427;AN=1233;DP=84761;NS=1233;AMR_AF=0;AFR_AF=0;EUR_AF=0;SAS_AF=0;EAS_AF=0.0902;VT=SNP;EX_TARGET",
      "GT",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "undefined": Object {
            "0": "C",
            "1": "N",
            "2": "V",
            "Number": undefined,
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
          "undefined": Object {
            "0": "N",
            "1": "O",
            "2": "N",
            "3": "V",
            "4": "A",
            "5": "R",
            "6": "I",
            "7": "A",
            "8": "N",
            "9": "T",
            "Number": undefined,
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
          "undefined": Object {
            "0": "P",
            "1": "L",
            "Number": undefined,
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
          "undefined": Object {
            "0": "M",
            "1": "U",
            "10": "L",
            "11": "I",
            "12": "C",
            "2": "L",
            "3": "T",
            "4": "I",
            "5": "_",
            "6": "A",
            "7": "L",
            "8": "L",
            "9": "E",
            "Number": 0,
          },
        },
        "contig": Object {
          "undefined": Object {
            "0": "Y",
            "Number": undefined,
          },
        },
        "fileDate": "20150218",
        "fileformat": "VCFv4.1",
        "reference": "ftp://ftp.1000genomes.ebi.ac.uk//vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz",
        "source": "GenomeSTRiP_v1.04",
      },
      "samples": Array [
        "HG00096",
        "HG00101",
        "HG00103",
        "HG00105",
        "HG00107",
        "HG00108",
        "HG00109",
        "HG00112",
        "HG00113",
        "HG00114",
        "HG00115",
        "HG00116",
        "HG00117",
        "HG00119",
        "HG00126",
        "HG00129",
        "HG00131",
        "HG00136",
        "HG00138",
        "HG00139",
        "HG00140",
        "HG00141",
        "HG00142",
        "HG00143",
        "HG00145",
        "HG00148",
        "HG00149",
        "HG00151",
        "HG00155",
        "HG00157",
        "HG00159",
        "HG00160",
        "HG00181",
        "HG00182",
        "HG00183",
        "HG00185",
        "HG00186",
        "HG00187",
        "HG00188",
        "HG00189",
        "HG00190",
        "HG00234",
        "HG00242",
        "HG00243",
        "HG00244",
        "HG00246",
        "HG00251",
        "HG00252",
        "HG00256",
        "HG00260",
        "HG00264",
        "HG00265",
        "HG00267",
        "HG00271",
        "HG00273",
        "HG00277",
        "HG00278",
        "HG00280",
        "HG00284",
        "HG00290",
        "HG00308",
        "HG00310",
        "HG00311",
        "HG00321",
        "HG00325",
        "HG00329",
        "HG00335",
        "HG00336",
        "HG00338",
        "HG00341",
        "HG00342",
        "HG00345",
        "HG00351",
        "HG00358",
        "HG00360",
        "HG00366",
        "HG00369",
        "HG00371",
        "HG00372",
        "HG00375",
        "HG00382",
        "HG00403",
        "HG00406",
        "HG00409",
        "HG00421",
        "HG00436",
        "HG00442",
        "HG00445",
        "HG00448",
        "HG00451",
        "HG00457",
        "HG00463",
        "HG00472",
        "HG00475",
        "HG00478",
        "HG00500",
        "HG00524",
        "HG00530",
        "HG00533",
        "HG00536",
        "HG00542",
        "HG00553",
        "HG00556",
        "HG00559",
        "HG00565",
        "HG00580",
        "HG00583",
        "HG00589",
        "HG00592",
        "HG00595",
        "HG00598",
        "HG00607",
        "HG00610",
        "HG00613",
        "HG00619",
        "HG00622",
        "HG00625",
        "HG00628",
        "HG00631",
        "HG00634",
        "HG00637",
        "HG00640",
        "HG00650",
        "HG00653",
        "HG00656",
        "HG00662",
        "HG00671",
        "HG00674",
        "HG00683",
        "HG00689",
        "HG00692",
        "HG00698",
        "HG00701",
        "HG00704",
        "HG00707",
        "HG00728",
        "HG00731",
        "HG00736",
        "HG00739",
        "HG00742",
        "HG00844",
        "HG00881",
        "HG00982",
        "HG01028",
        "HG01031",
        "HG01047",
        "HG01048",
        "HG01051",
        "HG01054",
        "HG01060",
        "HG01063",
        "HG01066",
        "HG01069",
        "HG01072",
        "HG01075",
        "HG01079",
        "HG01082",
        "HG01085",
        "HG01088",
        "HG01094",
        "HG01097",
        "HG01101",
        "HG01104",
        "HG01107",
        "HG01110",
        "HG01112",
        "HG01121",
        "HG01124",
        "HG01130",
        "HG01133",
        "HG01136",
        "HG01139",
        "HG01142",
        "HG01148",
        "HG01161",
        "HG01164",
        "HG01167",
        "HG01170",
        "HG01173",
        "HG01176",
        "HG01182",
        "HG01187",
        "HG01190",
        "HG01197",
        "HG01200",
        "HG01204",
        "HG01241",
        "HG01247",
        "HG01250",
        "HG01253",
        "HG01256",
        "HG01259",
        "HG01271",
        "HG01277",
        "HG01280",
        "HG01286",
        "HG01302",
        "HG01305",
        "HG01308",
        "HG01311",
        "HG01325",
        "HG01334",
        "HG01341",
        "HG01344",
        "HG01350",
        "HG01353",
        "HG01356",
        "HG01359",
        "HG01362",
        "HG01365",
        "HG01374",
        "HG01377",
        "HG01383",
        "HG01389",
        "HG01392",
        "HG01395",
        "HG01398",
        "HG01402",
        "HG01405",
        "HG01412",
        "HG01413",
        "HG01431",
        "HG01437",
        "HG01440",
        "HG01443",
        "HG01455",
        "HG01461",
        "HG01464",
        "HG01479",
        "HG01485",
        "HG01488",
        "HG01491",
        "HG01494",
        "HG01497",
        "HG01500",
        "HG01503",
        "HG01506",
        "HG01509",
        "HG01512",
        "HG01515",
        "HG01518",
        "HG01521",
        "HG01524",
        "HG01527",
        "HG01530",
        "HG01536",
        "HG01550",
        "HG01556",
        "HG01565",
        "HG01571",
        "HG01577",
        "HG01583",
        "HG01586",
        "HG01589",
        "HG01596",
        "HG01603",
        "HG01606",
        "HG01608",
        "HG01610",
        "HG01615",
        "HG01617",
        "HG01619",
        "HG01624",
        "HG01625",
        "HG01630",
        "HG01631",
        "HG01669",
        "HG01672",
        "HG01675",
        "HG01678",
        "HG01680",
        "HG01682",
        "HG01686",
        "HG01694",
        "HG01699",
        "HG01700",
        "HG01705",
        "HG01708",
        "HG01709",
        "HG01747",
        "HG01756",
        "HG01761",
        "HG01765",
        "HG01767",
        "HG01771",
        "HG01775",
        "HG01777",
        "HG01781",
        "HG01783",
        "HG01785",
        "HG01789",
        "HG01791",
        "HG01810",
        "HG01811",
        "HG01816",
        "HG01840",
        "HG01842",
        "HG01844",
        "HG01846",
        "HG01849",
        "HG01852",
        "HG01860",
        "HG01861",
        "HG01864",
        "HG01865",
        "HG01866",
        "HG01867",
        "HG01872",
        "HG01873",
        "HG01879",
        "HG01882",
        "HG01885",
        "HG01890",
        "HG01892",
        "HG01912",
        "HG01914",
        "HG01917",
        "HG01920",
        "HG01923",
        "HG01926",
        "HG01932",
        "HG01935",
        "HG01938",
        "HG01941",
        "HG01944",
        "HG01947",
        "HG01950",
        "HG01953",
        "HG01961",
        "HG01967",
        "HG01970",
        "HG01974",
        "HG01977",
        "HG01979",
        "HG01982",
        "HG01986",
        "HG01988",
        "HG01990",
        "HG01991",
        "HG02002",
        "HG02008",
        "HG02009",
        "HG02013",
        "HG02014",
        "HG02017",
        "HG02020",
        "HG02023",
        "HG02026",
        "HG02029",
        "HG02032",
        "HG02035",
        "HG02040",
        "HG02047",
        "HG02050",
        "HG02051",
        "HG02053",
        "HG02058",
        "HG02061",
        "HG02064",
        "HG02067",
        "HG02070",
        "HG02073",
        "HG02076",
        "HG02079",
        "HG02082",
        "HG02085",
        "HG02088",
        "HG02090",
        "HG02104",
        "HG02107",
        "HG02116",
        "HG02122",
        "HG02128",
        "HG02131",
        "HG02134",
        "HG02137",
        "HG02138",
        "HG02141",
        "HG02143",
        "HG02146",
        "HG02150",
        "HG02219",
        "HG02221",
        "HG02224",
        "HG02231",
        "HG02233",
        "HG02236",
        "HG02238",
        "HG02250",
        "HG02253",
        "HG02255",
        "HG02259",
        "HG02262",
        "HG02265",
        "HG02271",
        "HG02274",
        "HG02277",
        "HG02281",
        "HG02283",
        "HG02284",
        "HG02285",
        "HG02291",
        "HG02299",
        "HG02304",
        "HG02307",
        "HG02314",
        "HG02317",
        "HG02323",
        "HG02330",
        "HG02332",
        "HG02334",
        "HG02343",
        "HG02351",
        "HG02353",
        "HG02355",
        "HG02356",
        "HG02360",
        "HG02364",
        "HG02367",
        "HG02371",
        "HG02373",
        "HG02374",
        "HG02375",
        "HG02379",
        "HG02380",
        "HG02382",
        "HG02383",
        "HG02384",
        "HG02385",
        "HG02386",
        "HG02389",
        "HG02390",
        "HG02391",
        "HG02392",
        "HG02394",
        "HG02395",
        "HG02396",
        "HG02397",
        "HG02398",
        "HG02399",
        "HG02401",
        "HG02402",
        "HG02406",
        "HG02407",
        "HG02408",
        "HG02409",
        "HG02410",
        "HG02420",
        "HG02429",
        "HG02433",
        "HG02439",
        "HG02442",
        "HG02445",
        "HG02449",
        "HG02455",
        "HG02461",
        "HG02464",
        "HG02470",
        "HG02481",
        "HG02484",
        "HG02489",
        "HG02490",
        "HG02493",
        "HG02496",
        "HG02501",
        "HG02512",
        "HG02521",
        "HG02536",
        "HG02541",
        "HG02545",
        "HG02554",
        "HG02557",
        "HG02561",
        "HG02570",
        "HG02573",
        "HG02582",
        "HG02585",
        "HG02588",
        "HG02594",
        "HG02597",
        "HG02600",
        "HG02603",
        "HG02610",
        "HG02613",
        "HG02620",
        "HG02623",
        "HG02628",
        "HG02634",
        "HG02642",
        "HG02645",
        "HG02648",
        "HG02651",
        "HG02654",
        "HG02657",
        "HG02660",
        "HG02666",
        "HG02675",
        "HG02678",
        "HG02681",
        "HG02684",
        "HG02687",
        "HG02690",
        "HG02696",
        "HG02699",
        "HG02702",
        "HG02715",
        "HG02721",
        "HG02724",
        "HG02727",
        "HG02733",
        "HG02736",
        "HG02756",
        "HG02759",
        "HG02768",
        "HG02771",
        "HG02774",
        "HG02780",
        "HG02783",
        "HG02786",
        "HG02789",
        "HG02792",
        "HG02798",
        "HG02804",
        "HG02807",
        "HG02810",
        "HG02813",
        "HG02816",
        "HG02819",
        "HG02836",
        "HG02839",
        "HG02851",
        "HG02854",
        "HG02860",
        "HG02878",
        "HG02881",
        "HG02884",
        "HG02887",
        "HG02890",
        "HG02895",
        "HG02923",
        "HG02938",
        "HG02941",
        "HG02944",
        "HG02947",
        "HG02953",
        "HG02968",
        "HG02971",
        "HG02973",
        "HG02977",
        "HG02981",
        "HG02982",
        "HG03006",
        "HG03009",
        "HG03012",
        "HG03015",
        "HG03018",
        "HG03021",
        "HG03024",
        "HG03027",
        "HG03039",
        "HG03045",
        "HG03048",
        "HG03054",
        "HG03057",
        "HG03060",
        "HG03063",
        "HG03066",
        "HG03069",
        "HG03072",
        "HG03074",
        "HG03077",
        "HG03078",
        "HG03081",
        "HG03084",
        "HG03096",
        "HG03100",
        "HG03103",
        "HG03109",
        "HG03112",
        "HG03115",
        "HG03118",
        "HG03120",
        "HG03124",
        "HG03127",
        "HG03130",
        "HG03133",
        "HG03136",
        "HG03139",
        "HG03157",
        "HG03160",
        "HG03163",
        "HG03166",
        "HG03169",
        "HG03172",
        "HG03175",
        "HG03190",
        "HG03193",
        "HG03196",
        "HG03199",
        "HG03202",
        "HG03209",
        "HG03224",
        "HG03225",
        "HG03228",
        "HG03234",
        "HG03237",
        "HG03240",
        "HG03246",
        "HG03258",
        "HG03265",
        "HG03268",
        "HG03271",
        "HG03280",
        "HG03295",
        "HG03298",
        "HG03301",
        "HG03304",
        "HG03311",
        "HG03313",
        "HG03343",
        "HG03352",
        "HG03367",
        "HG03370",
        "HG03376",
        "HG03382",
        "HG03385",
        "HG03388",
        "HG03391",
        "HG03394",
        "HG03397",
        "HG03432",
        "HG03433",
        "HG03436",
        "HG03439",
        "HG03442",
        "HG03445",
        "HG03451",
        "HG03457",
        "HG03460",
        "HG03469",
        "HG03472",
        "HG03478",
        "HG03484",
        "HG03490",
        "HG03515",
        "HG03518",
        "HG03521",
        "HG03538",
        "HG03547",
        "HG03556",
        "HG03559",
        "HG03565",
        "HG03571",
        "HG03577",
        "HG03585",
        "HG03593",
        "HG03594",
        "HG03600",
        "HG03603",
        "HG03615",
        "HG03624",
        "HG03629",
        "HG03636",
        "HG03644",
        "HG03646",
        "HG03649",
        "HG03652",
        "HG03660",
        "HG03663",
        "HG03667",
        "HG03672",
        "HG03679",
        "HG03680",
        "HG03681",
        "HG03685",
        "HG03686",
        "HG03687",
        "HG03691",
        "HG03693",
        "HG03694",
        "HG03695",
        "HG03696",
        "HG03697",
        "HG03702",
        "HG03705",
        "HG03708",
        "HG03711",
        "HG03713",
        "HG03716",
        "HG03718",
        "HG03720",
        "HG03727",
        "HG03729",
        "HG03738",
        "HG03740",
        "HG03742",
        "HG03743",
        "HG03744",
        "HG03745",
        "HG03746",
        "HG03750",
        "HG03753",
        "HG03755",
        "HG03767",
        "HG03771",
        "HG03773",
        "HG03775",
        "HG03777",
        "HG03778",
        "HG03779",
        "HG03785",
        "HG03786",
        "HG03788",
        "HG03790",
        "HG03792",
        "HG03800",
        "HG03803",
        "HG03809",
        "HG03812",
        "HG03815",
        "HG03821",
        "HG03824",
        "HG03830",
        "HG03833",
        "HG03837",
        "HG03844",
        "HG03846",
        "HG03848",
        "HG03850",
        "HG03851",
        "HG03854",
        "HG03856",
        "HG03864",
        "HG03866",
        "HG03867",
        "HG03869",
        "HG03870",
        "HG03871",
        "HG03872",
        "HG03875",
        "HG03885",
        "HG03887",
        "HG03890",
        "HG03896",
        "HG03899",
        "HG03900",
        "HG03902",
        "HG03905",
        "HG03908",
        "HG03911",
        "HG03914",
        "HG03917",
        "HG03920",
        "HG03926",
        "HG03941",
        "HG03943",
        "HG03950",
        "HG03953",
        "HG03960",
        "HG03963",
        "HG03965",
        "HG03967",
        "HG03969",
        "HG03971",
        "HG03974",
        "HG03976",
        "HG03978",
        "HG03985",
        "HG03990",
        "HG03991",
        "HG03998",
        "HG03999",
        "HG04002",
        "HG04003",
        "HG04006",
        "HG04015",
        "HG04017",
        "HG04019",
        "HG04020",
        "HG04022",
        "HG04023",
        "HG04033",
        "HG04039",
        "HG04056",
        "HG04060",
        "HG04061",
        "HG04080",
        "HG04093",
        "HG04094",
        "HG04096",
        "HG04098",
        "HG04100",
        "HG04107",
        "HG04131",
        "HG04134",
        "HG04140",
        "HG04146",
        "HG04152",
        "HG04155",
        "HG04158",
        "HG04161",
        "HG04164",
        "HG04173",
        "HG04176",
        "HG04182",
        "HG04185",
        "HG04188",
        "HG04194",
        "HG04198",
        "HG04206",
        "HG04210",
        "HG04211",
        "HG04219",
        "HG04222",
        "HG04225",
        "HG04229",
        "HG04235",
        "HG04238",
        "HG04239",
        "NA06984",
        "NA06986",
        "NA06994",
        "NA07048",
        "NA07051",
        "NA07347",
        "NA07357",
        "NA10851",
        "NA11829",
        "NA11831",
        "NA11843",
        "NA11881",
        "NA11893",
        "NA11919",
        "NA11930",
        "NA11932",
        "NA11992",
        "NA11994",
        "NA12003",
        "NA12005",
        "NA12043",
        "NA12045",
        "NA12144",
        "NA12154",
        "NA12155",
        "NA12272",
        "NA12282",
        "NA12286",
        "NA12340",
        "NA12342",
        "NA12347",
        "NA12399",
        "NA12413",
        "NA12546",
        "NA12716",
        "NA12748",
        "NA12750",
        "NA12760",
        "NA12762",
        "NA12775",
        "NA12777",
        "NA12812",
        "NA12814",
        "NA12827",
        "NA12829",
        "NA12842",
        "NA12872",
        "NA12874",
        "NA12889",
        "NA18486",
        "NA18498",
        "NA18501",
        "NA18504",
        "NA18507",
        "NA18510",
        "NA18516",
        "NA18519",
        "NA18522",
        "NA18530",
        "NA18534",
        "NA18536",
        "NA18543",
        "NA18544",
        "NA18546",
        "NA18548",
        "NA18549",
        "NA18557",
        "NA18558",
        "NA18559",
        "NA18561",
        "NA18562",
        "NA18563",
        "NA18572",
        "NA18603",
        "NA18605",
        "NA18606",
        "NA18608",
        "NA18609",
        "NA18611",
        "NA18612",
        "NA18613",
        "NA18620",
        "NA18621",
        "NA18622",
        "NA18623",
        "NA18624",
        "NA18629",
        "NA18632",
        "NA18633",
        "NA18635",
        "NA18636",
        "NA18637",
        "NA18638",
        "NA18639",
        "NA18643",
        "NA18645",
        "NA18647",
        "NA18648",
        "NA18740",
        "NA18745",
        "NA18747",
        "NA18748",
        "NA18749",
        "NA18757",
        "NA18853",
        "NA18856",
        "NA18865",
        "NA18868",
        "NA18871",
        "NA18874",
        "NA18877",
        "NA18879",
        "NA18908",
        "NA18910",
        "NA18915",
        "NA18917",
        "NA18923",
        "NA18934",
        "NA18940",
        "NA18943",
        "NA18944",
        "NA18945",
        "NA18948",
        "NA18952",
        "NA18953",
        "NA18959",
        "NA18960",
        "NA18961",
        "NA18962",
        "NA18965",
        "NA18966",
        "NA18967",
        "NA18970",
        "NA18971",
        "NA18974",
        "NA18977",
        "NA18982",
        "NA18983",
        "NA18984",
        "NA18985",
        "NA18986",
        "NA18988",
        "NA18989",
        "NA18990",
        "NA18994",
        "NA18995",
        "NA19000",
        "NA19004",
        "NA19005",
        "NA19006",
        "NA19007",
        "NA19009",
        "NA19012",
        "NA19020",
        "NA19025",
        "NA19026",
        "NA19027",
        "NA19028",
        "NA19031",
        "NA19035",
        "NA19041",
        "NA19043",
        "NA19055",
        "NA19056",
        "NA19058",
        "NA19060",
        "NA19062",
        "NA19063",
        "NA19066",
        "NA19067",
        "NA19068",
        "NA19070",
        "NA19072",
        "NA19075",
        "NA19076",
        "NA19079",
        "NA19082",
        "NA19083",
        "NA19085",
        "NA19086",
        "NA19088",
        "NA19089",
        "NA19091",
        "NA19092",
        "NA19096",
        "NA19098",
        "NA19107",
        "NA19113",
        "NA19117",
        "NA19119",
        "NA19121",
        "NA19130",
        "NA19138",
        "NA19141",
        "NA19144",
        "NA19146",
        "NA19153",
        "NA19160",
        "NA19171",
        "NA19175",
        "NA19184",
        "NA19189",
        "NA19198",
        "NA19200",
        "NA19207",
        "NA19210",
        "NA19213",
        "NA19223",
        "NA19236",
        "NA19239",
        "NA19248",
        "NA19256",
        "NA19307",
        "NA19308",
        "NA19309",
        "NA19312",
        "NA19317",
        "NA19318",
        "NA19319",
        "NA19331",
        "NA19334",
        "NA19346",
        "NA19347",
        "NA19350",
        "NA19360",
        "NA19372",
        "NA19374",
        "NA19375",
        "NA19376",
        "NA19380",
        "NA19383",
        "NA19384",
        "NA19385",
        "NA19393",
        "NA19394",
        "NA19397",
        "NA19428",
        "NA19429",
        "NA19430",
        "NA19443",
        "NA19448",
        "NA19451",
        "NA19452",
        "NA19454",
        "NA19455",
        "NA19461",
        "NA19466",
        "NA19649",
        "NA19652",
        "NA19655",
        "NA19658",
        "NA19661",
        "NA19664",
        "NA19670",
        "NA19676",
        "NA19679",
        "NA19682",
        "NA19700",
        "NA19703",
        "NA19711",
        "NA19717",
        "NA19720",
        "NA19723",
        "NA19726",
        "NA19729",
        "NA19732",
        "NA19735",
        "NA19741",
        "NA19747",
        "NA19750",
        "NA19756",
        "NA19759",
        "NA19762",
        "NA19771",
        "NA19774",
        "NA19777",
        "NA19780",
        "NA19783",
        "NA19786",
        "NA19789",
        "NA19792",
        "NA19795",
        "NA19818",
        "NA19834",
        "NA19900",
        "NA19904",
        "NA19908",
        "NA19916",
        "NA19920",
        "NA19922",
        "NA19982",
        "NA19984",
        "NA20126",
        "NA20278",
        "NA20281",
        "NA20291",
        "NA20298",
        "NA20318",
        "NA20340",
        "NA20342",
        "NA20346",
        "NA20348",
        "NA20351",
        "NA20356",
        "NA20362",
        "NA20509",
        "NA20510",
        "NA20511",
        "NA20512",
        "NA20513",
        "NA20515",
        "NA20516",
        "NA20518",
        "NA20519",
        "NA20520",
        "NA20521",
        "NA20524",
        "NA20525",
        "NA20527",
        "NA20528",
        "NA20532",
        "NA20534",
        "NA20536",
        "NA20538",
        "NA20539",
        "NA20543",
        "NA20544",
        "NA20581",
        "NA20586",
        "NA20588",
        "NA20752",
        "NA20754",
        "NA20755",
        "NA20758",
        "NA20759",
        "NA20762",
        "NA20763",
        "NA20765",
        "NA20767",
        "NA20770",
        "NA20778",
        "NA20783",
        "NA20785",
        "NA20787",
        "NA20792",
        "NA20796",
        "NA20798",
        "NA20801",
        "NA20803",
        "NA20805",
        "NA20806",
        "NA20809",
        "NA20810",
        "NA20811",
        "NA20812",
        "NA20814",
        "NA20815",
        "NA20827",
        "NA20845",
        "NA20846",
        "NA20850",
        "NA20852",
        "NA20858",
        "NA20861",
        "NA20863",
        "NA20864",
        "NA20866",
        "NA20867",
        "NA20870",
        "NA20884",
        "NA20885",
        "NA20887",
        "NA20889",
        "NA20890",
        "NA20891",
        "NA20895",
        "NA20897",
        "NA20901",
        "NA20903",
        "NA20904",
        "NA20905",
        "NA20911",
        "NA21087",
        "NA21090",
        "NA21091",
        "NA21092",
        "NA21093",
        "NA21094",
        "NA21095",
        "NA21098",
        "NA21099",
        "NA21100",
        "NA21104",
        "NA21105",
        "NA21107",
        "NA21109",
        "NA21111",
        "NA21112",
        "NA21113",
        "NA21114",
        "NA21115",
        "NA21116",
        "NA21117",
        "NA21118",
        "NA21119",
        "NA21123",
        "NA21124",
        "NA21126",
        "NA21127",
        "NA21128",
        "NA21129",
        "NA21130",
        "NA21133",
        "NA21135",
      ],
      "strict": true,
    },
    "rest": "0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	1	0	0	0	1	1	0	0	0	0	0	1	0	0	0	1	1	0	0	1	1	0	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	1	1	0	1	0	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0",
    "that": Variant {
      "ALT": Array [
        "A",
      ],
      "CHROM": "Y",
      "FILTER": Array [
        "PASS",
      ],
      "ID": Array [
        "rs11575897",
      ],
      "POS": 2655180,
      "QUAL": 100,
      "REF": "G",
      "fields": Array [
        "Y",
        "2655180",
        "rs11575897",
        "G",
        "A",
        "100",
        "PASS",
        "AA=G;AC=22;AF=0.0178427;AN=1233;DP=84761;NS=1233;AMR_AF=0;AFR_AF=0;EUR_AF=0;SAS_AF=0;EAS_AF=0.0902;VT=SNP;EX_TARGET",
        "GT",
      ],
      "parser": VCF {
        "metadata": Object {
          "ALT": Object {
            "*": Object {
              "Description": "Represents any possible alternative allele at this location",
            },
            "CNV": Object {
              "Description": "Copy number variable region (may be both deletion and duplication)",
            },
            "DEL": Object {
              "Description": "Deletion relative to the reference",
            },
            "DEL:ME": Object {
              "Description": "Deletion of mobile element relative to the reference",
            },
            "DUP": Object {
              "Description": "Region of elevated copy number relative to the reference",
            },
            "DUP:TANDEM": Object {
              "Description": "Tandem duplication",
            },
            "INS": Object {
              "Description": "Insertion of novel sequence relative to the reference",
            },
            "INS:ME": Object {
              "Description": "Insertion of a mobile element relative to the reference",
            },
            "INV": Object {
              "Description": "Inversion of reference sequence",
            },
            "NON_REF": Object {
              "Description": "Represents any possible alternative allele at this location",
            },
            "undefined": Object {
              "0": "C",
              "1": "N",
              "2": "V",
              "Number": undefined,
            },
          },
          "FILTER": Object {
            "PASS": Object {
              "Description": "Passed all filters",
            },
            "undefined": Object {
              "0": "N",
              "1": "O",
              "2": "N",
              "3": "V",
              "4": "A",
              "5": "R",
              "6": "I",
              "7": "A",
              "8": "N",
              "9": "T",
              "Number": undefined,
            },
          },
          "FORMAT": Object {
            "AD": Object {
              "Description": "Read depth for each allele",
              "Number": "R",
              "Type": "Integer",
            },
            "ADF": Object {
              "Description": "Read depth for each allele on the forward strand",
              "Number": "R",
              "Type": "Integer",
            },
            "ADR": Object {
              "Description": "Read depth for each allele on the reverse strand",
              "Number": "R",
              "Type": "Integer",
            },
            "DP": Object {
              "Description": "Read depth",
              "Number": 1,
              "Type": "Integer",
            },
            "EC": Object {
              "Description": "Expected alternate allele counts",
              "Number": "A",
              "Type": "Integer",
            },
            "FT": Object {
              "Description": "Filter indicating if this genotype was \\"called\\"",
              "Number": 1,
              "Type": "String",
            },
            "GL": Object {
              "Description": "Genotype likelihoods",
              "Number": "G",
              "Type": "Float",
            },
            "GP": Object {
              "Description": "Genotype posterior probabilities",
              "Number": "G",
              "Type": "Float",
            },
            "GQ": Object {
              "Description": "Conditional genotype quality",
              "Number": 1,
              "Type": "Integer",
            },
            "GT": Object {
              "Description": "Genotype",
              "Number": 1,
              "Type": "String",
            },
            "HQ": Object {
              "Description": "Haplotype quality",
              "Number": 2,
              "Type": "Integer",
            },
            "MQ": Object {
              "Description": "RMS mapping quality",
              "Number": 1,
              "Type": "Integer",
            },
            "PL": Object {
              "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
              "Number": "G",
              "Type": "Integer",
            },
            "PQ": Object {
              "Description": "Phasing quality",
              "Number": 1,
              "Type": "Integer",
            },
            "PS": Object {
              "Description": "Phase set",
              "Number": 1,
              "Type": "Integer",
            },
            "undefined": Object {
              "0": "P",
              "1": "L",
              "Number": undefined,
            },
          },
          "INFO": Object {
            "1000G": Object {
              "Description": "1000 Genomes membership",
              "Number": 0,
              "Type": "Flag",
            },
            "AA": Object {
              "Description": "Ancestral allele",
              "Number": 1,
              "Type": "String",
            },
            "AC": Object {
              "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
              "Number": "A",
              "Type": "Integer",
            },
            "AD": Object {
              "Description": "Total read depth for each allele",
              "Number": "R",
              "Type": "Integer",
            },
            "ADF": Object {
              "Description": "Read depth for each allele on the forward strand",
              "Number": "R",
              "Type": "Integer",
            },
            "ADR": Object {
              "Description": "Read depth for each allele on the reverse strand",
              "Number": "R",
              "Type": "Integer",
            },
            "AF": Object {
              "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
              "Number": "A",
              "Type": "Float",
            },
            "AN": Object {
              "Description": "Total number of alleles in called genotypes",
              "Number": 1,
              "Type": "Integer",
            },
            "BKPTID": Object {
              "Description": "ID of the assembled alternate allele in the assembly file",
              "Type": "String",
            },
            "BQ": Object {
              "Description": "RMS base quality",
              "Number": 1,
              "Type": "Float",
            },
            "CICN": Object {
              "Description": "Confidence interval around copy number for the segment",
              "Number": 2,
              "Type": "Integer",
            },
            "CICNADJ": Object {
              "Description": "Confidence interval around copy number for the adjacency",
              "Number": null,
              "Type": "Integer",
            },
            "CIEND": Object {
              "Description": "Confidence interval around END for imprecise variants",
              "Number": 2,
              "Type": "Integer",
            },
            "CIGAR": Object {
              "Description": "Cigar string describing how to align an alternate allele to the reference allele",
              "Number": 1,
              "Type": "Float",
            },
            "CILEN": Object {
              "Description": "Confidence interval around the inserted material between breakend",
              "Number": 2,
              "Type": "Integer",
            },
            "CIPOS": Object {
              "Description": "Confidence interval around POS for imprecise variants",
              "Number": 2,
              "Type": "Integer",
            },
            "CN": Object {
              "Description": "Copy number of segment containing breakend",
              "Number": 1,
              "Type": "Integer",
            },
            "CNADJ": Object {
              "Description": "Copy number of adjacency",
              "Number": null,
              "Type": "Integer",
            },
            "DB": Object {
              "Description": "dbSNP membership",
              "Number": 0,
              "Type": "Flag",
            },
            "DBRIPID": Object {
              "Description": "ID of this element in DBRIP",
              "Number": 1,
              "Type": "String",
            },
            "DBVARID": Object {
              "Description": "ID of this element in DBVAR",
              "Number": 1,
              "Type": "String",
            },
            "DGVID": Object {
              "Description": "ID of this element in Database of Genomic Variation",
              "Number": 1,
              "Type": "String",
            },
            "DP": Object {
              "Description": "combined depth across samples",
              "Number": 1,
              "Type": "Integer",
            },
            "DPADJ": Object {
              "Description": "Read Depth of adjacency",
              "Type": "Integer",
            },
            "END": Object {
              "Description": "End position (for use with symbolic alleles)",
              "Number": 1,
              "Type": "Integer",
            },
            "EVENT": Object {
              "Description": "ID of event associated to breakend",
              "Number": 1,
              "Type": "String",
            },
            "H2": Object {
              "Description": "HapMap2 membership",
              "Number": 0,
              "Type": "Flag",
            },
            "H3": Object {
              "Description": "HapMap3 membership",
              "Number": 0,
              "Type": "Flag",
            },
            "HOMLEN": Object {
              "Description": "Length of base pair identical micro-homology at event breakpoints",
              "Type": "Integer",
            },
            "HOMSEQ": Object {
              "Description": "Sequence of base pair identical micro-homology at event breakpoints",
              "Type": "String",
            },
            "IMPRECISE": Object {
              "Description": "Imprecise structural variation",
              "Number": 0,
              "Type": "Flag",
            },
            "MATEID": Object {
              "Description": "ID of mate breakends",
              "Number": null,
              "Type": "String",
            },
            "MEINFO": Object {
              "Description": "Mobile element info of the form NAME,START,END,POLARITY",
              "Number": 4,
              "Type": "String",
            },
            "METRANS": Object {
              "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
              "Number": 4,
              "Type": "String",
            },
            "MQ": Object {
              "Description": "RMS mapping quality",
              "Number": 1,
              "Type": null,
            },
            "MQ0": Object {
              "Description": "Number of MAPQ == 0 reads",
              "Number": 1,
              "Type": "Integer",
            },
            "NOVEL": Object {
              "Description": "Indicates a novel structural variation",
              "Number": 0,
              "Type": "Flag",
            },
            "NS": Object {
              "Description": "Number of samples with data",
              "Number": 1,
              "Type": "Integer",
            },
            "PARID": Object {
              "Description": "ID of partner breakend",
              "Number": 1,
              "Type": "String",
            },
            "SB": Object {
              "Description": "Strand bias",
              "Number": 4,
              "Type": "Integer",
            },
            "SOMATIC": Object {
              "Description": "Somatic mutation (for cancer genomics)",
              "Number": 0,
              "Type": "Flag",
            },
            "SVLEN": Object {
              "Description": "Difference in length between REF and ALT alleles",
              "Number": null,
              "Type": "Integer",
            },
            "SVTYPE": Object {
              "Description": "Type of structural variant",
              "Number": 1,
              "Type": "String",
            },
            "VALIDATED": Object {
              "Description": "Validated by follow-up experiment",
              "Number": 0,
              "Type": "Flag",
            },
            "undefined": Object {
              "0": "M",
              "1": "U",
              "10": "L",
              "11": "I",
              "12": "C",
              "2": "L",
              "3": "T",
              "4": "I",
              "5": "_",
              "6": "A",
              "7": "L",
              "8": "L",
              "9": "E",
              "Number": 0,
            },
          },
          "contig": Object {
            "undefined": Object {
              "0": "Y",
              "Number": undefined,
            },
          },
          "fileDate": "20150218",
          "fileformat": "VCFv4.1",
          "reference": "ftp://ftp.1000genomes.ebi.ac.uk//vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz",
          "source": "GenomeSTRiP_v1.04",
        },
        "samples": Array [
          "HG00096",
          "HG00101",
          "HG00103",
          "HG00105",
          "HG00107",
          "HG00108",
          "HG00109",
          "HG00112",
          "HG00113",
          "HG00114",
          "HG00115",
          "HG00116",
          "HG00117",
          "HG00119",
          "HG00126",
          "HG00129",
          "HG00131",
          "HG00136",
          "HG00138",
          "HG00139",
          "HG00140",
          "HG00141",
          "HG00142",
          "HG00143",
          "HG00145",
          "HG00148",
          "HG00149",
          "HG00151",
          "HG00155",
          "HG00157",
          "HG00159",
          "HG00160",
          "HG00181",
          "HG00182",
          "HG00183",
          "HG00185",
          "HG00186",
          "HG00187",
          "HG00188",
          "HG00189",
          "HG00190",
          "HG00234",
          "HG00242",
          "HG00243",
          "HG00244",
          "HG00246",
          "HG00251",
          "HG00252",
          "HG00256",
          "HG00260",
          "HG00264",
          "HG00265",
          "HG00267",
          "HG00271",
          "HG00273",
          "HG00277",
          "HG00278",
          "HG00280",
          "HG00284",
          "HG00290",
          "HG00308",
          "HG00310",
          "HG00311",
          "HG00321",
          "HG00325",
          "HG00329",
          "HG00335",
          "HG00336",
          "HG00338",
          "HG00341",
          "HG00342",
          "HG00345",
          "HG00351",
          "HG00358",
          "HG00360",
          "HG00366",
          "HG00369",
          "HG00371",
          "HG00372",
          "HG00375",
          "HG00382",
          "HG00403",
          "HG00406",
          "HG00409",
          "HG00421",
          "HG00436",
          "HG00442",
          "HG00445",
          "HG00448",
          "HG00451",
          "HG00457",
          "HG00463",
          "HG00472",
          "HG00475",
          "HG00478",
          "HG00500",
          "HG00524",
          "HG00530",
          "HG00533",
          "HG00536",
          "HG00542",
          "HG00553",
          "HG00556",
          "HG00559",
          "HG00565",
          "HG00580",
          "HG00583",
          "HG00589",
          "HG00592",
          "HG00595",
          "HG00598",
          "HG00607",
          "HG00610",
          "HG00613",
          "HG00619",
          "HG00622",
          "HG00625",
          "HG00628",
          "HG00631",
          "HG00634",
          "HG00637",
          "HG00640",
          "HG00650",
          "HG00653",
          "HG00656",
          "HG00662",
          "HG00671",
          "HG00674",
          "HG00683",
          "HG00689",
          "HG00692",
          "HG00698",
          "HG00701",
          "HG00704",
          "HG00707",
          "HG00728",
          "HG00731",
          "HG00736",
          "HG00739",
          "HG00742",
          "HG00844",
          "HG00881",
          "HG00982",
          "HG01028",
          "HG01031",
          "HG01047",
          "HG01048",
          "HG01051",
          "HG01054",
          "HG01060",
          "HG01063",
          "HG01066",
          "HG01069",
          "HG01072",
          "HG01075",
          "HG01079",
          "HG01082",
          "HG01085",
          "HG01088",
          "HG01094",
          "HG01097",
          "HG01101",
          "HG01104",
          "HG01107",
          "HG01110",
          "HG01112",
          "HG01121",
          "HG01124",
          "HG01130",
          "HG01133",
          "HG01136",
          "HG01139",
          "HG01142",
          "HG01148",
          "HG01161",
          "HG01164",
          "HG01167",
          "HG01170",
          "HG01173",
          "HG01176",
          "HG01182",
          "HG01187",
          "HG01190",
          "HG01197",
          "HG01200",
          "HG01204",
          "HG01241",
          "HG01247",
          "HG01250",
          "HG01253",
          "HG01256",
          "HG01259",
          "HG01271",
          "HG01277",
          "HG01280",
          "HG01286",
          "HG01302",
          "HG01305",
          "HG01308",
          "HG01311",
          "HG01325",
          "HG01334",
          "HG01341",
          "HG01344",
          "HG01350",
          "HG01353",
          "HG01356",
          "HG01359",
          "HG01362",
          "HG01365",
          "HG01374",
          "HG01377",
          "HG01383",
          "HG01389",
          "HG01392",
          "HG01395",
          "HG01398",
          "HG01402",
          "HG01405",
          "HG01412",
          "HG01413",
          "HG01431",
          "HG01437",
          "HG01440",
          "HG01443",
          "HG01455",
          "HG01461",
          "HG01464",
          "HG01479",
          "HG01485",
          "HG01488",
          "HG01491",
          "HG01494",
          "HG01497",
          "HG01500",
          "HG01503",
          "HG01506",
          "HG01509",
          "HG01512",
          "HG01515",
          "HG01518",
          "HG01521",
          "HG01524",
          "HG01527",
          "HG01530",
          "HG01536",
          "HG01550",
          "HG01556",
          "HG01565",
          "HG01571",
          "HG01577",
          "HG01583",
          "HG01586",
          "HG01589",
          "HG01596",
          "HG01603",
          "HG01606",
          "HG01608",
          "HG01610",
          "HG01615",
          "HG01617",
          "HG01619",
          "HG01624",
          "HG01625",
          "HG01630",
          "HG01631",
          "HG01669",
          "HG01672",
          "HG01675",
          "HG01678",
          "HG01680",
          "HG01682",
          "HG01686",
          "HG01694",
          "HG01699",
          "HG01700",
          "HG01705",
          "HG01708",
          "HG01709",
          "HG01747",
          "HG01756",
          "HG01761",
          "HG01765",
          "HG01767",
          "HG01771",
          "HG01775",
          "HG01777",
          "HG01781",
          "HG01783",
          "HG01785",
          "HG01789",
          "HG01791",
          "HG01810",
          "HG01811",
          "HG01816",
          "HG01840",
          "HG01842",
          "HG01844",
          "HG01846",
          "HG01849",
          "HG01852",
          "HG01860",
          "HG01861",
          "HG01864",
          "HG01865",
          "HG01866",
          "HG01867",
          "HG01872",
          "HG01873",
          "HG01879",
          "HG01882",
          "HG01885",
          "HG01890",
          "HG01892",
          "HG01912",
          "HG01914",
          "HG01917",
          "HG01920",
          "HG01923",
          "HG01926",
          "HG01932",
          "HG01935",
          "HG01938",
          "HG01941",
          "HG01944",
          "HG01947",
          "HG01950",
          "HG01953",
          "HG01961",
          "HG01967",
          "HG01970",
          "HG01974",
          "HG01977",
          "HG01979",
          "HG01982",
          "HG01986",
          "HG01988",
          "HG01990",
          "HG01991",
          "HG02002",
          "HG02008",
          "HG02009",
          "HG02013",
          "HG02014",
          "HG02017",
          "HG02020",
          "HG02023",
          "HG02026",
          "HG02029",
          "HG02032",
          "HG02035",
          "HG02040",
          "HG02047",
          "HG02050",
          "HG02051",
          "HG02053",
          "HG02058",
          "HG02061",
          "HG02064",
          "HG02067",
          "HG02070",
          "HG02073",
          "HG02076",
          "HG02079",
          "HG02082",
          "HG02085",
          "HG02088",
          "HG02090",
          "HG02104",
          "HG02107",
          "HG02116",
          "HG02122",
          "HG02128",
          "HG02131",
          "HG02134",
          "HG02137",
          "HG02138",
          "HG02141",
          "HG02143",
          "HG02146",
          "HG02150",
          "HG02219",
          "HG02221",
          "HG02224",
          "HG02231",
          "HG02233",
          "HG02236",
          "HG02238",
          "HG02250",
          "HG02253",
          "HG02255",
          "HG02259",
          "HG02262",
          "HG02265",
          "HG02271",
          "HG02274",
          "HG02277",
          "HG02281",
          "HG02283",
          "HG02284",
          "HG02285",
          "HG02291",
          "HG02299",
          "HG02304",
          "HG02307",
          "HG02314",
          "HG02317",
          "HG02323",
          "HG02330",
          "HG02332",
          "HG02334",
          "HG02343",
          "HG02351",
          "HG02353",
          "HG02355",
          "HG02356",
          "HG02360",
          "HG02364",
          "HG02367",
          "HG02371",
          "HG02373",
          "HG02374",
          "HG02375",
          "HG02379",
          "HG02380",
          "HG02382",
          "HG02383",
          "HG02384",
          "HG02385",
          "HG02386",
          "HG02389",
          "HG02390",
          "HG02391",
          "HG02392",
          "HG02394",
          "HG02395",
          "HG02396",
          "HG02397",
          "HG02398",
          "HG02399",
          "HG02401",
          "HG02402",
          "HG02406",
          "HG02407",
          "HG02408",
          "HG02409",
          "HG02410",
          "HG02420",
          "HG02429",
          "HG02433",
          "HG02439",
          "HG02442",
          "HG02445",
          "HG02449",
          "HG02455",
          "HG02461",
          "HG02464",
          "HG02470",
          "HG02481",
          "HG02484",
          "HG02489",
          "HG02490",
          "HG02493",
          "HG02496",
          "HG02501",
          "HG02512",
          "HG02521",
          "HG02536",
          "HG02541",
          "HG02545",
          "HG02554",
          "HG02557",
          "HG02561",
          "HG02570",
          "HG02573",
          "HG02582",
          "HG02585",
          "HG02588",
          "HG02594",
          "HG02597",
          "HG02600",
          "HG02603",
          "HG02610",
          "HG02613",
          "HG02620",
          "HG02623",
          "HG02628",
          "HG02634",
          "HG02642",
          "HG02645",
          "HG02648",
          "HG02651",
          "HG02654",
          "HG02657",
          "HG02660",
          "HG02666",
          "HG02675",
          "HG02678",
          "HG02681",
          "HG02684",
          "HG02687",
          "HG02690",
          "HG02696",
          "HG02699",
          "HG02702",
          "HG02715",
          "HG02721",
          "HG02724",
          "HG02727",
          "HG02733",
          "HG02736",
          "HG02756",
          "HG02759",
          "HG02768",
          "HG02771",
          "HG02774",
          "HG02780",
          "HG02783",
          "HG02786",
          "HG02789",
          "HG02792",
          "HG02798",
          "HG02804",
          "HG02807",
          "HG02810",
          "HG02813",
          "HG02816",
          "HG02819",
          "HG02836",
          "HG02839",
          "HG02851",
          "HG02854",
          "HG02860",
          "HG02878",
          "HG02881",
          "HG02884",
          "HG02887",
          "HG02890",
          "HG02895",
          "HG02923",
          "HG02938",
          "HG02941",
          "HG02944",
          "HG02947",
          "HG02953",
          "HG02968",
          "HG02971",
          "HG02973",
          "HG02977",
          "HG02981",
          "HG02982",
          "HG03006",
          "HG03009",
          "HG03012",
          "HG03015",
          "HG03018",
          "HG03021",
          "HG03024",
          "HG03027",
          "HG03039",
          "HG03045",
          "HG03048",
          "HG03054",
          "HG03057",
          "HG03060",
          "HG03063",
          "HG03066",
          "HG03069",
          "HG03072",
          "HG03074",
          "HG03077",
          "HG03078",
          "HG03081",
          "HG03084",
          "HG03096",
          "HG03100",
          "HG03103",
          "HG03109",
          "HG03112",
          "HG03115",
          "HG03118",
          "HG03120",
          "HG03124",
          "HG03127",
          "HG03130",
          "HG03133",
          "HG03136",
          "HG03139",
          "HG03157",
          "HG03160",
          "HG03163",
          "HG03166",
          "HG03169",
          "HG03172",
          "HG03175",
          "HG03190",
          "HG03193",
          "HG03196",
          "HG03199",
          "HG03202",
          "HG03209",
          "HG03224",
          "HG03225",
          "HG03228",
          "HG03234",
          "HG03237",
          "HG03240",
          "HG03246",
          "HG03258",
          "HG03265",
          "HG03268",
          "HG03271",
          "HG03280",
          "HG03295",
          "HG03298",
          "HG03301",
          "HG03304",
          "HG03311",
          "HG03313",
          "HG03343",
          "HG03352",
          "HG03367",
          "HG03370",
          "HG03376",
          "HG03382",
          "HG03385",
          "HG03388",
          "HG03391",
          "HG03394",
          "HG03397",
          "HG03432",
          "HG03433",
          "HG03436",
          "HG03439",
          "HG03442",
          "HG03445",
          "HG03451",
          "HG03457",
          "HG03460",
          "HG03469",
          "HG03472",
          "HG03478",
          "HG03484",
          "HG03490",
          "HG03515",
          "HG03518",
          "HG03521",
          "HG03538",
          "HG03547",
          "HG03556",
          "HG03559",
          "HG03565",
          "HG03571",
          "HG03577",
          "HG03585",
          "HG03593",
          "HG03594",
          "HG03600",
          "HG03603",
          "HG03615",
          "HG03624",
          "HG03629",
          "HG03636",
          "HG03644",
          "HG03646",
          "HG03649",
          "HG03652",
          "HG03660",
          "HG03663",
          "HG03667",
          "HG03672",
          "HG03679",
          "HG03680",
          "HG03681",
          "HG03685",
          "HG03686",
          "HG03687",
          "HG03691",
          "HG03693",
          "HG03694",
          "HG03695",
          "HG03696",
          "HG03697",
          "HG03702",
          "HG03705",
          "HG03708",
          "HG03711",
          "HG03713",
          "HG03716",
          "HG03718",
          "HG03720",
          "HG03727",
          "HG03729",
          "HG03738",
          "HG03740",
          "HG03742",
          "HG03743",
          "HG03744",
          "HG03745",
          "HG03746",
          "HG03750",
          "HG03753",
          "HG03755",
          "HG03767",
          "HG03771",
          "HG03773",
          "HG03775",
          "HG03777",
          "HG03778",
          "HG03779",
          "HG03785",
          "HG03786",
          "HG03788",
          "HG03790",
          "HG03792",
          "HG03800",
          "HG03803",
          "HG03809",
          "HG03812",
          "HG03815",
          "HG03821",
          "HG03824",
          "HG03830",
          "HG03833",
          "HG03837",
          "HG03844",
          "HG03846",
          "HG03848",
          "HG03850",
          "HG03851",
          "HG03854",
          "HG03856",
          "HG03864",
          "HG03866",
          "HG03867",
          "HG03869",
          "HG03870",
          "HG03871",
          "HG03872",
          "HG03875",
          "HG03885",
          "HG03887",
          "HG03890",
          "HG03896",
          "HG03899",
          "HG03900",
          "HG03902",
          "HG03905",
          "HG03908",
          "HG03911",
          "HG03914",
          "HG03917",
          "HG03920",
          "HG03926",
          "HG03941",
          "HG03943",
          "HG03950",
          "HG03953",
          "HG03960",
          "HG03963",
          "HG03965",
          "HG03967",
          "HG03969",
          "HG03971",
          "HG03974",
          "HG03976",
          "HG03978",
          "HG03985",
          "HG03990",
          "HG03991",
          "HG03998",
          "HG03999",
          "HG04002",
          "HG04003",
          "HG04006",
          "HG04015",
          "HG04017",
          "HG04019",
          "HG04020",
          "HG04022",
          "HG04023",
          "HG04033",
          "HG04039",
          "HG04056",
          "HG04060",
          "HG04061",
          "HG04080",
          "HG04093",
          "HG04094",
          "HG04096",
          "HG04098",
          "HG04100",
          "HG04107",
          "HG04131",
          "HG04134",
          "HG04140",
          "HG04146",
          "HG04152",
          "HG04155",
          "HG04158",
          "HG04161",
          "HG04164",
          "HG04173",
          "HG04176",
          "HG04182",
          "HG04185",
          "HG04188",
          "HG04194",
          "HG04198",
          "HG04206",
          "HG04210",
          "HG04211",
          "HG04219",
          "HG04222",
          "HG04225",
          "HG04229",
          "HG04235",
          "HG04238",
          "HG04239",
          "NA06984",
          "NA06986",
          "NA06994",
          "NA07048",
          "NA07051",
          "NA07347",
          "NA07357",
          "NA10851",
          "NA11829",
          "NA11831",
          "NA11843",
          "NA11881",
          "NA11893",
          "NA11919",
          "NA11930",
          "NA11932",
          "NA11992",
          "NA11994",
          "NA12003",
          "NA12005",
          "NA12043",
          "NA12045",
          "NA12144",
          "NA12154",
          "NA12155",
          "NA12272",
          "NA12282",
          "NA12286",
          "NA12340",
          "NA12342",
          "NA12347",
          "NA12399",
          "NA12413",
          "NA12546",
          "NA12716",
          "NA12748",
          "NA12750",
          "NA12760",
          "NA12762",
          "NA12775",
          "NA12777",
          "NA12812",
          "NA12814",
          "NA12827",
          "NA12829",
          "NA12842",
          "NA12872",
          "NA12874",
          "NA12889",
          "NA18486",
          "NA18498",
          "NA18501",
          "NA18504",
          "NA18507",
          "NA18510",
          "NA18516",
          "NA18519",
          "NA18522",
          "NA18530",
          "NA18534",
          "NA18536",
          "NA18543",
          "NA18544",
          "NA18546",
          "NA18548",
          "NA18549",
          "NA18557",
          "NA18558",
          "NA18559",
          "NA18561",
          "NA18562",
          "NA18563",
          "NA18572",
          "NA18603",
          "NA18605",
          "NA18606",
          "NA18608",
          "NA18609",
          "NA18611",
          "NA18612",
          "NA18613",
          "NA18620",
          "NA18621",
          "NA18622",
          "NA18623",
          "NA18624",
          "NA18629",
          "NA18632",
          "NA18633",
          "NA18635",
          "NA18636",
          "NA18637",
          "NA18638",
          "NA18639",
          "NA18643",
          "NA18645",
          "NA18647",
          "NA18648",
          "NA18740",
          "NA18745",
          "NA18747",
          "NA18748",
          "NA18749",
          "NA18757",
          "NA18853",
          "NA18856",
          "NA18865",
          "NA18868",
          "NA18871",
          "NA18874",
          "NA18877",
          "NA18879",
          "NA18908",
          "NA18910",
          "NA18915",
          "NA18917",
          "NA18923",
          "NA18934",
          "NA18940",
          "NA18943",
          "NA18944",
          "NA18945",
          "NA18948",
          "NA18952",
          "NA18953",
          "NA18959",
          "NA18960",
          "NA18961",
          "NA18962",
          "NA18965",
          "NA18966",
          "NA18967",
          "NA18970",
          "NA18971",
          "NA18974",
          "NA18977",
          "NA18982",
          "NA18983",
          "NA18984",
          "NA18985",
          "NA18986",
          "NA18988",
          "NA18989",
          "NA18990",
          "NA18994",
          "NA18995",
          "NA19000",
          "NA19004",
          "NA19005",
          "NA19006",
          "NA19007",
          "NA19009",
          "NA19012",
          "NA19020",
          "NA19025",
          "NA19026",
          "NA19027",
          "NA19028",
          "NA19031",
          "NA19035",
          "NA19041",
          "NA19043",
          "NA19055",
          "NA19056",
          "NA19058",
          "NA19060",
          "NA19062",
          "NA19063",
          "NA19066",
          "NA19067",
          "NA19068",
          "NA19070",
          "NA19072",
          "NA19075",
          "NA19076",
          "NA19079",
          "NA19082",
          "NA19083",
          "NA19085",
          "NA19086",
          "NA19088",
          "NA19089",
          "NA19091",
          "NA19092",
          "NA19096",
          "NA19098",
          "NA19107",
          "NA19113",
          "NA19117",
          "NA19119",
          "NA19121",
          "NA19130",
          "NA19138",
          "NA19141",
          "NA19144",
          "NA19146",
          "NA19153",
          "NA19160",
          "NA19171",
          "NA19175",
          "NA19184",
          "NA19189",
          "NA19198",
          "NA19200",
          "NA19207",
          "NA19210",
          "NA19213",
          "NA19223",
          "NA19236",
          "NA19239",
          "NA19248",
          "NA19256",
          "NA19307",
          "NA19308",
          "NA19309",
          "NA19312",
          "NA19317",
          "NA19318",
          "NA19319",
          "NA19331",
          "NA19334",
          "NA19346",
          "NA19347",
          "NA19350",
          "NA19360",
          "NA19372",
          "NA19374",
          "NA19375",
          "NA19376",
          "NA19380",
          "NA19383",
          "NA19384",
          "NA19385",
          "NA19393",
          "NA19394",
          "NA19397",
          "NA19428",
          "NA19429",
          "NA19430",
          "NA19443",
          "NA19448",
          "NA19451",
          "NA19452",
          "NA19454",
          "NA19455",
          "NA19461",
          "NA19466",
          "NA19649",
          "NA19652",
          "NA19655",
          "NA19658",
          "NA19661",
          "NA19664",
          "NA19670",
          "NA19676",
          "NA19679",
          "NA19682",
          "NA19700",
          "NA19703",
          "NA19711",
          "NA19717",
          "NA19720",
          "NA19723",
          "NA19726",
          "NA19729",
          "NA19732",
          "NA19735",
          "NA19741",
          "NA19747",
          "NA19750",
          "NA19756",
          "NA19759",
          "NA19762",
          "NA19771",
          "NA19774",
          "NA19777",
          "NA19780",
          "NA19783",
          "NA19786",
          "NA19789",
          "NA19792",
          "NA19795",
          "NA19818",
          "NA19834",
          "NA19900",
          "NA19904",
          "NA19908",
          "NA19916",
          "NA19920",
          "NA19922",
          "NA19982",
          "NA19984",
          "NA20126",
          "NA20278",
          "NA20281",
          "NA20291",
          "NA20298",
          "NA20318",
          "NA20340",
          "NA20342",
          "NA20346",
          "NA20348",
          "NA20351",
          "NA20356",
          "NA20362",
          "NA20509",
          "NA20510",
          "NA20511",
          "NA20512",
          "NA20513",
          "NA20515",
          "NA20516",
          "NA20518",
          "NA20519",
          "NA20520",
          "NA20521",
          "NA20524",
          "NA20525",
          "NA20527",
          "NA20528",
          "NA20532",
          "NA20534",
          "NA20536",
          "NA20538",
          "NA20539",
          "NA20543",
          "NA20544",
          "NA20581",
          "NA20586",
          "NA20588",
          "NA20752",
          "NA20754",
          "NA20755",
          "NA20758",
          "NA20759",
          "NA20762",
          "NA20763",
          "NA20765",
          "NA20767",
          "NA20770",
          "NA20778",
          "NA20783",
          "NA20785",
          "NA20787",
          "NA20792",
          "NA20796",
          "NA20798",
          "NA20801",
          "NA20803",
          "NA20805",
          "NA20806",
          "NA20809",
          "NA20810",
          "NA20811",
          "NA20812",
          "NA20814",
          "NA20815",
          "NA20827",
          "NA20845",
          "NA20846",
          "NA20850",
          "NA20852",
          "NA20858",
          "NA20861",
          "NA20863",
          "NA20864",
          "NA20866",
          "NA20867",
          "NA20870",
          "NA20884",
          "NA20885",
          "NA20887",
          "NA20889",
          "NA20890",
          "NA20891",
          "NA20895",
          "NA20897",
          "NA20901",
          "NA20903",
          "NA20904",
          "NA20905",
          "NA20911",
          "NA21087",
          "NA21090",
          "NA21091",
          "NA21092",
          "NA21093",
          "NA21094",
          "NA21095",
          "NA21098",
          "NA21099",
          "NA21100",
          "NA21104",
          "NA21105",
          "NA21107",
          "NA21109",
          "NA21111",
          "NA21112",
          "NA21113",
          "NA21114",
          "NA21115",
          "NA21116",
          "NA21117",
          "NA21118",
          "NA21119",
          "NA21123",
          "NA21124",
          "NA21126",
          "NA21127",
          "NA21128",
          "NA21129",
          "NA21130",
          "NA21133",
          "NA21135",
        ],
        "strict": true,
      },
      "rest": "0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	1	0	0	0	1	1	0	0	0	0	0	1	0	0	0	1	1	0	0	1	1	0	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	1	1	0	1	0	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0",
      "that": [Circular],
    },
  },
  Object {
    "ALT": Array [
      "C",
    ],
    "CHROM": "Y",
    "FILTER": Array [
      "PASS",
    ],
    "ID": null,
    "POS": 2655471,
    "QUAL": 100,
    "REF": "A",
    "fields": Array [
      "Y",
      "2655471",
      ".",
      "A",
      "C",
      "100",
      "PASS",
      "AA=A;AC=5;AF=0.00405515;AN=1233;DP=72067;NS=1233;AMR_AF=0;AFR_AF=0;EUR_AF=0;SAS_AF=0;EAS_AF=0.0205;VT=SNP;EX_TARGET",
      "GT",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "undefined": Object {
            "0": "C",
            "1": "N",
            "2": "V",
            "Number": undefined,
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
          "undefined": Object {
            "0": "N",
            "1": "O",
            "2": "N",
            "3": "V",
            "4": "A",
            "5": "R",
            "6": "I",
            "7": "A",
            "8": "N",
            "9": "T",
            "Number": undefined,
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
          "undefined": Object {
            "0": "P",
            "1": "L",
            "Number": undefined,
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
          "undefined": Object {
            "0": "M",
            "1": "U",
            "10": "L",
            "11": "I",
            "12": "C",
            "2": "L",
            "3": "T",
            "4": "I",
            "5": "_",
            "6": "A",
            "7": "L",
            "8": "L",
            "9": "E",
            "Number": 0,
          },
        },
        "contig": Object {
          "undefined": Object {
            "0": "Y",
            "Number": undefined,
          },
        },
        "fileDate": "20150218",
        "fileformat": "VCFv4.1",
        "reference": "ftp://ftp.1000genomes.ebi.ac.uk//vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz",
        "source": "GenomeSTRiP_v1.04",
      },
      "samples": Array [
        "HG00096",
        "HG00101",
        "HG00103",
        "HG00105",
        "HG00107",
        "HG00108",
        "HG00109",
        "HG00112",
        "HG00113",
        "HG00114",
        "HG00115",
        "HG00116",
        "HG00117",
        "HG00119",
        "HG00126",
        "HG00129",
        "HG00131",
        "HG00136",
        "HG00138",
        "HG00139",
        "HG00140",
        "HG00141",
        "HG00142",
        "HG00143",
        "HG00145",
        "HG00148",
        "HG00149",
        "HG00151",
        "HG00155",
        "HG00157",
        "HG00159",
        "HG00160",
        "HG00181",
        "HG00182",
        "HG00183",
        "HG00185",
        "HG00186",
        "HG00187",
        "HG00188",
        "HG00189",
        "HG00190",
        "HG00234",
        "HG00242",
        "HG00243",
        "HG00244",
        "HG00246",
        "HG00251",
        "HG00252",
        "HG00256",
        "HG00260",
        "HG00264",
        "HG00265",
        "HG00267",
        "HG00271",
        "HG00273",
        "HG00277",
        "HG00278",
        "HG00280",
        "HG00284",
        "HG00290",
        "HG00308",
        "HG00310",
        "HG00311",
        "HG00321",
        "HG00325",
        "HG00329",
        "HG00335",
        "HG00336",
        "HG00338",
        "HG00341",
        "HG00342",
        "HG00345",
        "HG00351",
        "HG00358",
        "HG00360",
        "HG00366",
        "HG00369",
        "HG00371",
        "HG00372",
        "HG00375",
        "HG00382",
        "HG00403",
        "HG00406",
        "HG00409",
        "HG00421",
        "HG00436",
        "HG00442",
        "HG00445",
        "HG00448",
        "HG00451",
        "HG00457",
        "HG00463",
        "HG00472",
        "HG00475",
        "HG00478",
        "HG00500",
        "HG00524",
        "HG00530",
        "HG00533",
        "HG00536",
        "HG00542",
        "HG00553",
        "HG00556",
        "HG00559",
        "HG00565",
        "HG00580",
        "HG00583",
        "HG00589",
        "HG00592",
        "HG00595",
        "HG00598",
        "HG00607",
        "HG00610",
        "HG00613",
        "HG00619",
        "HG00622",
        "HG00625",
        "HG00628",
        "HG00631",
        "HG00634",
        "HG00637",
        "HG00640",
        "HG00650",
        "HG00653",
        "HG00656",
        "HG00662",
        "HG00671",
        "HG00674",
        "HG00683",
        "HG00689",
        "HG00692",
        "HG00698",
        "HG00701",
        "HG00704",
        "HG00707",
        "HG00728",
        "HG00731",
        "HG00736",
        "HG00739",
        "HG00742",
        "HG00844",
        "HG00881",
        "HG00982",
        "HG01028",
        "HG01031",
        "HG01047",
        "HG01048",
        "HG01051",
        "HG01054",
        "HG01060",
        "HG01063",
        "HG01066",
        "HG01069",
        "HG01072",
        "HG01075",
        "HG01079",
        "HG01082",
        "HG01085",
        "HG01088",
        "HG01094",
        "HG01097",
        "HG01101",
        "HG01104",
        "HG01107",
        "HG01110",
        "HG01112",
        "HG01121",
        "HG01124",
        "HG01130",
        "HG01133",
        "HG01136",
        "HG01139",
        "HG01142",
        "HG01148",
        "HG01161",
        "HG01164",
        "HG01167",
        "HG01170",
        "HG01173",
        "HG01176",
        "HG01182",
        "HG01187",
        "HG01190",
        "HG01197",
        "HG01200",
        "HG01204",
        "HG01241",
        "HG01247",
        "HG01250",
        "HG01253",
        "HG01256",
        "HG01259",
        "HG01271",
        "HG01277",
        "HG01280",
        "HG01286",
        "HG01302",
        "HG01305",
        "HG01308",
        "HG01311",
        "HG01325",
        "HG01334",
        "HG01341",
        "HG01344",
        "HG01350",
        "HG01353",
        "HG01356",
        "HG01359",
        "HG01362",
        "HG01365",
        "HG01374",
        "HG01377",
        "HG01383",
        "HG01389",
        "HG01392",
        "HG01395",
        "HG01398",
        "HG01402",
        "HG01405",
        "HG01412",
        "HG01413",
        "HG01431",
        "HG01437",
        "HG01440",
        "HG01443",
        "HG01455",
        "HG01461",
        "HG01464",
        "HG01479",
        "HG01485",
        "HG01488",
        "HG01491",
        "HG01494",
        "HG01497",
        "HG01500",
        "HG01503",
        "HG01506",
        "HG01509",
        "HG01512",
        "HG01515",
        "HG01518",
        "HG01521",
        "HG01524",
        "HG01527",
        "HG01530",
        "HG01536",
        "HG01550",
        "HG01556",
        "HG01565",
        "HG01571",
        "HG01577",
        "HG01583",
        "HG01586",
        "HG01589",
        "HG01596",
        "HG01603",
        "HG01606",
        "HG01608",
        "HG01610",
        "HG01615",
        "HG01617",
        "HG01619",
        "HG01624",
        "HG01625",
        "HG01630",
        "HG01631",
        "HG01669",
        "HG01672",
        "HG01675",
        "HG01678",
        "HG01680",
        "HG01682",
        "HG01686",
        "HG01694",
        "HG01699",
        "HG01700",
        "HG01705",
        "HG01708",
        "HG01709",
        "HG01747",
        "HG01756",
        "HG01761",
        "HG01765",
        "HG01767",
        "HG01771",
        "HG01775",
        "HG01777",
        "HG01781",
        "HG01783",
        "HG01785",
        "HG01789",
        "HG01791",
        "HG01810",
        "HG01811",
        "HG01816",
        "HG01840",
        "HG01842",
        "HG01844",
        "HG01846",
        "HG01849",
        "HG01852",
        "HG01860",
        "HG01861",
        "HG01864",
        "HG01865",
        "HG01866",
        "HG01867",
        "HG01872",
        "HG01873",
        "HG01879",
        "HG01882",
        "HG01885",
        "HG01890",
        "HG01892",
        "HG01912",
        "HG01914",
        "HG01917",
        "HG01920",
        "HG01923",
        "HG01926",
        "HG01932",
        "HG01935",
        "HG01938",
        "HG01941",
        "HG01944",
        "HG01947",
        "HG01950",
        "HG01953",
        "HG01961",
        "HG01967",
        "HG01970",
        "HG01974",
        "HG01977",
        "HG01979",
        "HG01982",
        "HG01986",
        "HG01988",
        "HG01990",
        "HG01991",
        "HG02002",
        "HG02008",
        "HG02009",
        "HG02013",
        "HG02014",
        "HG02017",
        "HG02020",
        "HG02023",
        "HG02026",
        "HG02029",
        "HG02032",
        "HG02035",
        "HG02040",
        "HG02047",
        "HG02050",
        "HG02051",
        "HG02053",
        "HG02058",
        "HG02061",
        "HG02064",
        "HG02067",
        "HG02070",
        "HG02073",
        "HG02076",
        "HG02079",
        "HG02082",
        "HG02085",
        "HG02088",
        "HG02090",
        "HG02104",
        "HG02107",
        "HG02116",
        "HG02122",
        "HG02128",
        "HG02131",
        "HG02134",
        "HG02137",
        "HG02138",
        "HG02141",
        "HG02143",
        "HG02146",
        "HG02150",
        "HG02219",
        "HG02221",
        "HG02224",
        "HG02231",
        "HG02233",
        "HG02236",
        "HG02238",
        "HG02250",
        "HG02253",
        "HG02255",
        "HG02259",
        "HG02262",
        "HG02265",
        "HG02271",
        "HG02274",
        "HG02277",
        "HG02281",
        "HG02283",
        "HG02284",
        "HG02285",
        "HG02291",
        "HG02299",
        "HG02304",
        "HG02307",
        "HG02314",
        "HG02317",
        "HG02323",
        "HG02330",
        "HG02332",
        "HG02334",
        "HG02343",
        "HG02351",
        "HG02353",
        "HG02355",
        "HG02356",
        "HG02360",
        "HG02364",
        "HG02367",
        "HG02371",
        "HG02373",
        "HG02374",
        "HG02375",
        "HG02379",
        "HG02380",
        "HG02382",
        "HG02383",
        "HG02384",
        "HG02385",
        "HG02386",
        "HG02389",
        "HG02390",
        "HG02391",
        "HG02392",
        "HG02394",
        "HG02395",
        "HG02396",
        "HG02397",
        "HG02398",
        "HG02399",
        "HG02401",
        "HG02402",
        "HG02406",
        "HG02407",
        "HG02408",
        "HG02409",
        "HG02410",
        "HG02420",
        "HG02429",
        "HG02433",
        "HG02439",
        "HG02442",
        "HG02445",
        "HG02449",
        "HG02455",
        "HG02461",
        "HG02464",
        "HG02470",
        "HG02481",
        "HG02484",
        "HG02489",
        "HG02490",
        "HG02493",
        "HG02496",
        "HG02501",
        "HG02512",
        "HG02521",
        "HG02536",
        "HG02541",
        "HG02545",
        "HG02554",
        "HG02557",
        "HG02561",
        "HG02570",
        "HG02573",
        "HG02582",
        "HG02585",
        "HG02588",
        "HG02594",
        "HG02597",
        "HG02600",
        "HG02603",
        "HG02610",
        "HG02613",
        "HG02620",
        "HG02623",
        "HG02628",
        "HG02634",
        "HG02642",
        "HG02645",
        "HG02648",
        "HG02651",
        "HG02654",
        "HG02657",
        "HG02660",
        "HG02666",
        "HG02675",
        "HG02678",
        "HG02681",
        "HG02684",
        "HG02687",
        "HG02690",
        "HG02696",
        "HG02699",
        "HG02702",
        "HG02715",
        "HG02721",
        "HG02724",
        "HG02727",
        "HG02733",
        "HG02736",
        "HG02756",
        "HG02759",
        "HG02768",
        "HG02771",
        "HG02774",
        "HG02780",
        "HG02783",
        "HG02786",
        "HG02789",
        "HG02792",
        "HG02798",
        "HG02804",
        "HG02807",
        "HG02810",
        "HG02813",
        "HG02816",
        "HG02819",
        "HG02836",
        "HG02839",
        "HG02851",
        "HG02854",
        "HG02860",
        "HG02878",
        "HG02881",
        "HG02884",
        "HG02887",
        "HG02890",
        "HG02895",
        "HG02923",
        "HG02938",
        "HG02941",
        "HG02944",
        "HG02947",
        "HG02953",
        "HG02968",
        "HG02971",
        "HG02973",
        "HG02977",
        "HG02981",
        "HG02982",
        "HG03006",
        "HG03009",
        "HG03012",
        "HG03015",
        "HG03018",
        "HG03021",
        "HG03024",
        "HG03027",
        "HG03039",
        "HG03045",
        "HG03048",
        "HG03054",
        "HG03057",
        "HG03060",
        "HG03063",
        "HG03066",
        "HG03069",
        "HG03072",
        "HG03074",
        "HG03077",
        "HG03078",
        "HG03081",
        "HG03084",
        "HG03096",
        "HG03100",
        "HG03103",
        "HG03109",
        "HG03112",
        "HG03115",
        "HG03118",
        "HG03120",
        "HG03124",
        "HG03127",
        "HG03130",
        "HG03133",
        "HG03136",
        "HG03139",
        "HG03157",
        "HG03160",
        "HG03163",
        "HG03166",
        "HG03169",
        "HG03172",
        "HG03175",
        "HG03190",
        "HG03193",
        "HG03196",
        "HG03199",
        "HG03202",
        "HG03209",
        "HG03224",
        "HG03225",
        "HG03228",
        "HG03234",
        "HG03237",
        "HG03240",
        "HG03246",
        "HG03258",
        "HG03265",
        "HG03268",
        "HG03271",
        "HG03280",
        "HG03295",
        "HG03298",
        "HG03301",
        "HG03304",
        "HG03311",
        "HG03313",
        "HG03343",
        "HG03352",
        "HG03367",
        "HG03370",
        "HG03376",
        "HG03382",
        "HG03385",
        "HG03388",
        "HG03391",
        "HG03394",
        "HG03397",
        "HG03432",
        "HG03433",
        "HG03436",
        "HG03439",
        "HG03442",
        "HG03445",
        "HG03451",
        "HG03457",
        "HG03460",
        "HG03469",
        "HG03472",
        "HG03478",
        "HG03484",
        "HG03490",
        "HG03515",
        "HG03518",
        "HG03521",
        "HG03538",
        "HG03547",
        "HG03556",
        "HG03559",
        "HG03565",
        "HG03571",
        "HG03577",
        "HG03585",
        "HG03593",
        "HG03594",
        "HG03600",
        "HG03603",
        "HG03615",
        "HG03624",
        "HG03629",
        "HG03636",
        "HG03644",
        "HG03646",
        "HG03649",
        "HG03652",
        "HG03660",
        "HG03663",
        "HG03667",
        "HG03672",
        "HG03679",
        "HG03680",
        "HG03681",
        "HG03685",
        "HG03686",
        "HG03687",
        "HG03691",
        "HG03693",
        "HG03694",
        "HG03695",
        "HG03696",
        "HG03697",
        "HG03702",
        "HG03705",
        "HG03708",
        "HG03711",
        "HG03713",
        "HG03716",
        "HG03718",
        "HG03720",
        "HG03727",
        "HG03729",
        "HG03738",
        "HG03740",
        "HG03742",
        "HG03743",
        "HG03744",
        "HG03745",
        "HG03746",
        "HG03750",
        "HG03753",
        "HG03755",
        "HG03767",
        "HG03771",
        "HG03773",
        "HG03775",
        "HG03777",
        "HG03778",
        "HG03779",
        "HG03785",
        "HG03786",
        "HG03788",
        "HG03790",
        "HG03792",
        "HG03800",
        "HG03803",
        "HG03809",
        "HG03812",
        "HG03815",
        "HG03821",
        "HG03824",
        "HG03830",
        "HG03833",
        "HG03837",
        "HG03844",
        "HG03846",
        "HG03848",
        "HG03850",
        "HG03851",
        "HG03854",
        "HG03856",
        "HG03864",
        "HG03866",
        "HG03867",
        "HG03869",
        "HG03870",
        "HG03871",
        "HG03872",
        "HG03875",
        "HG03885",
        "HG03887",
        "HG03890",
        "HG03896",
        "HG03899",
        "HG03900",
        "HG03902",
        "HG03905",
        "HG03908",
        "HG03911",
        "HG03914",
        "HG03917",
        "HG03920",
        "HG03926",
        "HG03941",
        "HG03943",
        "HG03950",
        "HG03953",
        "HG03960",
        "HG03963",
        "HG03965",
        "HG03967",
        "HG03969",
        "HG03971",
        "HG03974",
        "HG03976",
        "HG03978",
        "HG03985",
        "HG03990",
        "HG03991",
        "HG03998",
        "HG03999",
        "HG04002",
        "HG04003",
        "HG04006",
        "HG04015",
        "HG04017",
        "HG04019",
        "HG04020",
        "HG04022",
        "HG04023",
        "HG04033",
        "HG04039",
        "HG04056",
        "HG04060",
        "HG04061",
        "HG04080",
        "HG04093",
        "HG04094",
        "HG04096",
        "HG04098",
        "HG04100",
        "HG04107",
        "HG04131",
        "HG04134",
        "HG04140",
        "HG04146",
        "HG04152",
        "HG04155",
        "HG04158",
        "HG04161",
        "HG04164",
        "HG04173",
        "HG04176",
        "HG04182",
        "HG04185",
        "HG04188",
        "HG04194",
        "HG04198",
        "HG04206",
        "HG04210",
        "HG04211",
        "HG04219",
        "HG04222",
        "HG04225",
        "HG04229",
        "HG04235",
        "HG04238",
        "HG04239",
        "NA06984",
        "NA06986",
        "NA06994",
        "NA07048",
        "NA07051",
        "NA07347",
        "NA07357",
        "NA10851",
        "NA11829",
        "NA11831",
        "NA11843",
        "NA11881",
        "NA11893",
        "NA11919",
        "NA11930",
        "NA11932",
        "NA11992",
        "NA11994",
        "NA12003",
        "NA12005",
        "NA12043",
        "NA12045",
        "NA12144",
        "NA12154",
        "NA12155",
        "NA12272",
        "NA12282",
        "NA12286",
        "NA12340",
        "NA12342",
        "NA12347",
        "NA12399",
        "NA12413",
        "NA12546",
        "NA12716",
        "NA12748",
        "NA12750",
        "NA12760",
        "NA12762",
        "NA12775",
        "NA12777",
        "NA12812",
        "NA12814",
        "NA12827",
        "NA12829",
        "NA12842",
        "NA12872",
        "NA12874",
        "NA12889",
        "NA18486",
        "NA18498",
        "NA18501",
        "NA18504",
        "NA18507",
        "NA18510",
        "NA18516",
        "NA18519",
        "NA18522",
        "NA18530",
        "NA18534",
        "NA18536",
        "NA18543",
        "NA18544",
        "NA18546",
        "NA18548",
        "NA18549",
        "NA18557",
        "NA18558",
        "NA18559",
        "NA18561",
        "NA18562",
        "NA18563",
        "NA18572",
        "NA18603",
        "NA18605",
        "NA18606",
        "NA18608",
        "NA18609",
        "NA18611",
        "NA18612",
        "NA18613",
        "NA18620",
        "NA18621",
        "NA18622",
        "NA18623",
        "NA18624",
        "NA18629",
        "NA18632",
        "NA18633",
        "NA18635",
        "NA18636",
        "NA18637",
        "NA18638",
        "NA18639",
        "NA18643",
        "NA18645",
        "NA18647",
        "NA18648",
        "NA18740",
        "NA18745",
        "NA18747",
        "NA18748",
        "NA18749",
        "NA18757",
        "NA18853",
        "NA18856",
        "NA18865",
        "NA18868",
        "NA18871",
        "NA18874",
        "NA18877",
        "NA18879",
        "NA18908",
        "NA18910",
        "NA18915",
        "NA18917",
        "NA18923",
        "NA18934",
        "NA18940",
        "NA18943",
        "NA18944",
        "NA18945",
        "NA18948",
        "NA18952",
        "NA18953",
        "NA18959",
        "NA18960",
        "NA18961",
        "NA18962",
        "NA18965",
        "NA18966",
        "NA18967",
        "NA18970",
        "NA18971",
        "NA18974",
        "NA18977",
        "NA18982",
        "NA18983",
        "NA18984",
        "NA18985",
        "NA18986",
        "NA18988",
        "NA18989",
        "NA18990",
        "NA18994",
        "NA18995",
        "NA19000",
        "NA19004",
        "NA19005",
        "NA19006",
        "NA19007",
        "NA19009",
        "NA19012",
        "NA19020",
        "NA19025",
        "NA19026",
        "NA19027",
        "NA19028",
        "NA19031",
        "NA19035",
        "NA19041",
        "NA19043",
        "NA19055",
        "NA19056",
        "NA19058",
        "NA19060",
        "NA19062",
        "NA19063",
        "NA19066",
        "NA19067",
        "NA19068",
        "NA19070",
        "NA19072",
        "NA19075",
        "NA19076",
        "NA19079",
        "NA19082",
        "NA19083",
        "NA19085",
        "NA19086",
        "NA19088",
        "NA19089",
        "NA19091",
        "NA19092",
        "NA19096",
        "NA19098",
        "NA19107",
        "NA19113",
        "NA19117",
        "NA19119",
        "NA19121",
        "NA19130",
        "NA19138",
        "NA19141",
        "NA19144",
        "NA19146",
        "NA19153",
        "NA19160",
        "NA19171",
        "NA19175",
        "NA19184",
        "NA19189",
        "NA19198",
        "NA19200",
        "NA19207",
        "NA19210",
        "NA19213",
        "NA19223",
        "NA19236",
        "NA19239",
        "NA19248",
        "NA19256",
        "NA19307",
        "NA19308",
        "NA19309",
        "NA19312",
        "NA19317",
        "NA19318",
        "NA19319",
        "NA19331",
        "NA19334",
        "NA19346",
        "NA19347",
        "NA19350",
        "NA19360",
        "NA19372",
        "NA19374",
        "NA19375",
        "NA19376",
        "NA19380",
        "NA19383",
        "NA19384",
        "NA19385",
        "NA19393",
        "NA19394",
        "NA19397",
        "NA19428",
        "NA19429",
        "NA19430",
        "NA19443",
        "NA19448",
        "NA19451",
        "NA19452",
        "NA19454",
        "NA19455",
        "NA19461",
        "NA19466",
        "NA19649",
        "NA19652",
        "NA19655",
        "NA19658",
        "NA19661",
        "NA19664",
        "NA19670",
        "NA19676",
        "NA19679",
        "NA19682",
        "NA19700",
        "NA19703",
        "NA19711",
        "NA19717",
        "NA19720",
        "NA19723",
        "NA19726",
        "NA19729",
        "NA19732",
        "NA19735",
        "NA19741",
        "NA19747",
        "NA19750",
        "NA19756",
        "NA19759",
        "NA19762",
        "NA19771",
        "NA19774",
        "NA19777",
        "NA19780",
        "NA19783",
        "NA19786",
        "NA19789",
        "NA19792",
        "NA19795",
        "NA19818",
        "NA19834",
        "NA19900",
        "NA19904",
        "NA19908",
        "NA19916",
        "NA19920",
        "NA19922",
        "NA19982",
        "NA19984",
        "NA20126",
        "NA20278",
        "NA20281",
        "NA20291",
        "NA20298",
        "NA20318",
        "NA20340",
        "NA20342",
        "NA20346",
        "NA20348",
        "NA20351",
        "NA20356",
        "NA20362",
        "NA20509",
        "NA20510",
        "NA20511",
        "NA20512",
        "NA20513",
        "NA20515",
        "NA20516",
        "NA20518",
        "NA20519",
        "NA20520",
        "NA20521",
        "NA20524",
        "NA20525",
        "NA20527",
        "NA20528",
        "NA20532",
        "NA20534",
        "NA20536",
        "NA20538",
        "NA20539",
        "NA20543",
        "NA20544",
        "NA20581",
        "NA20586",
        "NA20588",
        "NA20752",
        "NA20754",
        "NA20755",
        "NA20758",
        "NA20759",
        "NA20762",
        "NA20763",
        "NA20765",
        "NA20767",
        "NA20770",
        "NA20778",
        "NA20783",
        "NA20785",
        "NA20787",
        "NA20792",
        "NA20796",
        "NA20798",
        "NA20801",
        "NA20803",
        "NA20805",
        "NA20806",
        "NA20809",
        "NA20810",
        "NA20811",
        "NA20812",
        "NA20814",
        "NA20815",
        "NA20827",
        "NA20845",
        "NA20846",
        "NA20850",
        "NA20852",
        "NA20858",
        "NA20861",
        "NA20863",
        "NA20864",
        "NA20866",
        "NA20867",
        "NA20870",
        "NA20884",
        "NA20885",
        "NA20887",
        "NA20889",
        "NA20890",
        "NA20891",
        "NA20895",
        "NA20897",
        "NA20901",
        "NA20903",
        "NA20904",
        "NA20905",
        "NA20911",
        "NA21087",
        "NA21090",
        "NA21091",
        "NA21092",
        "NA21093",
        "NA21094",
        "NA21095",
        "NA21098",
        "NA21099",
        "NA21100",
        "NA21104",
        "NA21105",
        "NA21107",
        "NA21109",
        "NA21111",
        "NA21112",
        "NA21113",
        "NA21114",
        "NA21115",
        "NA21116",
        "NA21117",
        "NA21118",
        "NA21119",
        "NA21123",
        "NA21124",
        "NA21126",
        "NA21127",
        "NA21128",
        "NA21129",
        "NA21130",
        "NA21133",
        "NA21135",
      ],
      "strict": true,
    },
    "rest": "0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0",
    "that": Variant {
      "ALT": Array [
        "C",
      ],
      "CHROM": "Y",
      "FILTER": Array [
        "PASS",
      ],
      "ID": null,
      "POS": 2655471,
      "QUAL": 100,
      "REF": "A",
      "fields": Array [
        "Y",
        "2655471",
        ".",
        "A",
        "C",
        "100",
        "PASS",
        "AA=A;AC=5;AF=0.00405515;AN=1233;DP=72067;NS=1233;AMR_AF=0;AFR_AF=0;EUR_AF=0;SAS_AF=0;EAS_AF=0.0205;VT=SNP;EX_TARGET",
        "GT",
      ],
      "parser": VCF {
        "metadata": Object {
          "ALT": Object {
            "*": Object {
              "Description": "Represents any possible alternative allele at this location",
            },
            "CNV": Object {
              "Description": "Copy number variable region (may be both deletion and duplication)",
            },
            "DEL": Object {
              "Description": "Deletion relative to the reference",
            },
            "DEL:ME": Object {
              "Description": "Deletion of mobile element relative to the reference",
            },
            "DUP": Object {
              "Description": "Region of elevated copy number relative to the reference",
            },
            "DUP:TANDEM": Object {
              "Description": "Tandem duplication",
            },
            "INS": Object {
              "Description": "Insertion of novel sequence relative to the reference",
            },
            "INS:ME": Object {
              "Description": "Insertion of a mobile element relative to the reference",
            },
            "INV": Object {
              "Description": "Inversion of reference sequence",
            },
            "NON_REF": Object {
              "Description": "Represents any possible alternative allele at this location",
            },
            "undefined": Object {
              "0": "C",
              "1": "N",
              "2": "V",
              "Number": undefined,
            },
          },
          "FILTER": Object {
            "PASS": Object {
              "Description": "Passed all filters",
            },
            "undefined": Object {
              "0": "N",
              "1": "O",
              "2": "N",
              "3": "V",
              "4": "A",
              "5": "R",
              "6": "I",
              "7": "A",
              "8": "N",
              "9": "T",
              "Number": undefined,
            },
          },
          "FORMAT": Object {
            "AD": Object {
              "Description": "Read depth for each allele",
              "Number": "R",
              "Type": "Integer",
            },
            "ADF": Object {
              "Description": "Read depth for each allele on the forward strand",
              "Number": "R",
              "Type": "Integer",
            },
            "ADR": Object {
              "Description": "Read depth for each allele on the reverse strand",
              "Number": "R",
              "Type": "Integer",
            },
            "DP": Object {
              "Description": "Read depth",
              "Number": 1,
              "Type": "Integer",
            },
            "EC": Object {
              "Description": "Expected alternate allele counts",
              "Number": "A",
              "Type": "Integer",
            },
            "FT": Object {
              "Description": "Filter indicating if this genotype was \\"called\\"",
              "Number": 1,
              "Type": "String",
            },
            "GL": Object {
              "Description": "Genotype likelihoods",
              "Number": "G",
              "Type": "Float",
            },
            "GP": Object {
              "Description": "Genotype posterior probabilities",
              "Number": "G",
              "Type": "Float",
            },
            "GQ": Object {
              "Description": "Conditional genotype quality",
              "Number": 1,
              "Type": "Integer",
            },
            "GT": Object {
              "Description": "Genotype",
              "Number": 1,
              "Type": "String",
            },
            "HQ": Object {
              "Description": "Haplotype quality",
              "Number": 2,
              "Type": "Integer",
            },
            "MQ": Object {
              "Description": "RMS mapping quality",
              "Number": 1,
              "Type": "Integer",
            },
            "PL": Object {
              "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
              "Number": "G",
              "Type": "Integer",
            },
            "PQ": Object {
              "Description": "Phasing quality",
              "Number": 1,
              "Type": "Integer",
            },
            "PS": Object {
              "Description": "Phase set",
              "Number": 1,
              "Type": "Integer",
            },
            "undefined": Object {
              "0": "P",
              "1": "L",
              "Number": undefined,
            },
          },
          "INFO": Object {
            "1000G": Object {
              "Description": "1000 Genomes membership",
              "Number": 0,
              "Type": "Flag",
            },
            "AA": Object {
              "Description": "Ancestral allele",
              "Number": 1,
              "Type": "String",
            },
            "AC": Object {
              "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
              "Number": "A",
              "Type": "Integer",
            },
            "AD": Object {
              "Description": "Total read depth for each allele",
              "Number": "R",
              "Type": "Integer",
            },
            "ADF": Object {
              "Description": "Read depth for each allele on the forward strand",
              "Number": "R",
              "Type": "Integer",
            },
            "ADR": Object {
              "Description": "Read depth for each allele on the reverse strand",
              "Number": "R",
              "Type": "Integer",
            },
            "AF": Object {
              "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
              "Number": "A",
              "Type": "Float",
            },
            "AN": Object {
              "Description": "Total number of alleles in called genotypes",
              "Number": 1,
              "Type": "Integer",
            },
            "BKPTID": Object {
              "Description": "ID of the assembled alternate allele in the assembly file",
              "Type": "String",
            },
            "BQ": Object {
              "Description": "RMS base quality",
              "Number": 1,
              "Type": "Float",
            },
            "CICN": Object {
              "Description": "Confidence interval around copy number for the segment",
              "Number": 2,
              "Type": "Integer",
            },
            "CICNADJ": Object {
              "Description": "Confidence interval around copy number for the adjacency",
              "Number": null,
              "Type": "Integer",
            },
            "CIEND": Object {
              "Description": "Confidence interval around END for imprecise variants",
              "Number": 2,
              "Type": "Integer",
            },
            "CIGAR": Object {
              "Description": "Cigar string describing how to align an alternate allele to the reference allele",
              "Number": 1,
              "Type": "Float",
            },
            "CILEN": Object {
              "Description": "Confidence interval around the inserted material between breakend",
              "Number": 2,
              "Type": "Integer",
            },
            "CIPOS": Object {
              "Description": "Confidence interval around POS for imprecise variants",
              "Number": 2,
              "Type": "Integer",
            },
            "CN": Object {
              "Description": "Copy number of segment containing breakend",
              "Number": 1,
              "Type": "Integer",
            },
            "CNADJ": Object {
              "Description": "Copy number of adjacency",
              "Number": null,
              "Type": "Integer",
            },
            "DB": Object {
              "Description": "dbSNP membership",
              "Number": 0,
              "Type": "Flag",
            },
            "DBRIPID": Object {
              "Description": "ID of this element in DBRIP",
              "Number": 1,
              "Type": "String",
            },
            "DBVARID": Object {
              "Description": "ID of this element in DBVAR",
              "Number": 1,
              "Type": "String",
            },
            "DGVID": Object {
              "Description": "ID of this element in Database of Genomic Variation",
              "Number": 1,
              "Type": "String",
            },
            "DP": Object {
              "Description": "combined depth across samples",
              "Number": 1,
              "Type": "Integer",
            },
            "DPADJ": Object {
              "Description": "Read Depth of adjacency",
              "Type": "Integer",
            },
            "END": Object {
              "Description": "End position (for use with symbolic alleles)",
              "Number": 1,
              "Type": "Integer",
            },
            "EVENT": Object {
              "Description": "ID of event associated to breakend",
              "Number": 1,
              "Type": "String",
            },
            "H2": Object {
              "Description": "HapMap2 membership",
              "Number": 0,
              "Type": "Flag",
            },
            "H3": Object {
              "Description": "HapMap3 membership",
              "Number": 0,
              "Type": "Flag",
            },
            "HOMLEN": Object {
              "Description": "Length of base pair identical micro-homology at event breakpoints",
              "Type": "Integer",
            },
            "HOMSEQ": Object {
              "Description": "Sequence of base pair identical micro-homology at event breakpoints",
              "Type": "String",
            },
            "IMPRECISE": Object {
              "Description": "Imprecise structural variation",
              "Number": 0,
              "Type": "Flag",
            },
            "MATEID": Object {
              "Description": "ID of mate breakends",
              "Number": null,
              "Type": "String",
            },
            "MEINFO": Object {
              "Description": "Mobile element info of the form NAME,START,END,POLARITY",
              "Number": 4,
              "Type": "String",
            },
            "METRANS": Object {
              "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
              "Number": 4,
              "Type": "String",
            },
            "MQ": Object {
              "Description": "RMS mapping quality",
              "Number": 1,
              "Type": null,
            },
            "MQ0": Object {
              "Description": "Number of MAPQ == 0 reads",
              "Number": 1,
              "Type": "Integer",
            },
            "NOVEL": Object {
              "Description": "Indicates a novel structural variation",
              "Number": 0,
              "Type": "Flag",
            },
            "NS": Object {
              "Description": "Number of samples with data",
              "Number": 1,
              "Type": "Integer",
            },
            "PARID": Object {
              "Description": "ID of partner breakend",
              "Number": 1,
              "Type": "String",
            },
            "SB": Object {
              "Description": "Strand bias",
              "Number": 4,
              "Type": "Integer",
            },
            "SOMATIC": Object {
              "Description": "Somatic mutation (for cancer genomics)",
              "Number": 0,
              "Type": "Flag",
            },
            "SVLEN": Object {
              "Description": "Difference in length between REF and ALT alleles",
              "Number": null,
              "Type": "Integer",
            },
            "SVTYPE": Object {
              "Description": "Type of structural variant",
              "Number": 1,
              "Type": "String",
            },
            "VALIDATED": Object {
              "Description": "Validated by follow-up experiment",
              "Number": 0,
              "Type": "Flag",
            },
            "undefined": Object {
              "0": "M",
              "1": "U",
              "10": "L",
              "11": "I",
              "12": "C",
              "2": "L",
              "3": "T",
              "4": "I",
              "5": "_",
              "6": "A",
              "7": "L",
              "8": "L",
              "9": "E",
              "Number": 0,
            },
          },
          "contig": Object {
            "undefined": Object {
              "0": "Y",
              "Number": undefined,
            },
          },
          "fileDate": "20150218",
          "fileformat": "VCFv4.1",
          "reference": "ftp://ftp.1000genomes.ebi.ac.uk//vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz",
          "source": "GenomeSTRiP_v1.04",
        },
        "samples": Array [
          "HG00096",
          "HG00101",
          "HG00103",
          "HG00105",
          "HG00107",
          "HG00108",
          "HG00109",
          "HG00112",
          "HG00113",
          "HG00114",
          "HG00115",
          "HG00116",
          "HG00117",
          "HG00119",
          "HG00126",
          "HG00129",
          "HG00131",
          "HG00136",
          "HG00138",
          "HG00139",
          "HG00140",
          "HG00141",
          "HG00142",
          "HG00143",
          "HG00145",
          "HG00148",
          "HG00149",
          "HG00151",
          "HG00155",
          "HG00157",
          "HG00159",
          "HG00160",
          "HG00181",
          "HG00182",
          "HG00183",
          "HG00185",
          "HG00186",
          "HG00187",
          "HG00188",
          "HG00189",
          "HG00190",
          "HG00234",
          "HG00242",
          "HG00243",
          "HG00244",
          "HG00246",
          "HG00251",
          "HG00252",
          "HG00256",
          "HG00260",
          "HG00264",
          "HG00265",
          "HG00267",
          "HG00271",
          "HG00273",
          "HG00277",
          "HG00278",
          "HG00280",
          "HG00284",
          "HG00290",
          "HG00308",
          "HG00310",
          "HG00311",
          "HG00321",
          "HG00325",
          "HG00329",
          "HG00335",
          "HG00336",
          "HG00338",
          "HG00341",
          "HG00342",
          "HG00345",
          "HG00351",
          "HG00358",
          "HG00360",
          "HG00366",
          "HG00369",
          "HG00371",
          "HG00372",
          "HG00375",
          "HG00382",
          "HG00403",
          "HG00406",
          "HG00409",
          "HG00421",
          "HG00436",
          "HG00442",
          "HG00445",
          "HG00448",
          "HG00451",
          "HG00457",
          "HG00463",
          "HG00472",
          "HG00475",
          "HG00478",
          "HG00500",
          "HG00524",
          "HG00530",
          "HG00533",
          "HG00536",
          "HG00542",
          "HG00553",
          "HG00556",
          "HG00559",
          "HG00565",
          "HG00580",
          "HG00583",
          "HG00589",
          "HG00592",
          "HG00595",
          "HG00598",
          "HG00607",
          "HG00610",
          "HG00613",
          "HG00619",
          "HG00622",
          "HG00625",
          "HG00628",
          "HG00631",
          "HG00634",
          "HG00637",
          "HG00640",
          "HG00650",
          "HG00653",
          "HG00656",
          "HG00662",
          "HG00671",
          "HG00674",
          "HG00683",
          "HG00689",
          "HG00692",
          "HG00698",
          "HG00701",
          "HG00704",
          "HG00707",
          "HG00728",
          "HG00731",
          "HG00736",
          "HG00739",
          "HG00742",
          "HG00844",
          "HG00881",
          "HG00982",
          "HG01028",
          "HG01031",
          "HG01047",
          "HG01048",
          "HG01051",
          "HG01054",
          "HG01060",
          "HG01063",
          "HG01066",
          "HG01069",
          "HG01072",
          "HG01075",
          "HG01079",
          "HG01082",
          "HG01085",
          "HG01088",
          "HG01094",
          "HG01097",
          "HG01101",
          "HG01104",
          "HG01107",
          "HG01110",
          "HG01112",
          "HG01121",
          "HG01124",
          "HG01130",
          "HG01133",
          "HG01136",
          "HG01139",
          "HG01142",
          "HG01148",
          "HG01161",
          "HG01164",
          "HG01167",
          "HG01170",
          "HG01173",
          "HG01176",
          "HG01182",
          "HG01187",
          "HG01190",
          "HG01197",
          "HG01200",
          "HG01204",
          "HG01241",
          "HG01247",
          "HG01250",
          "HG01253",
          "HG01256",
          "HG01259",
          "HG01271",
          "HG01277",
          "HG01280",
          "HG01286",
          "HG01302",
          "HG01305",
          "HG01308",
          "HG01311",
          "HG01325",
          "HG01334",
          "HG01341",
          "HG01344",
          "HG01350",
          "HG01353",
          "HG01356",
          "HG01359",
          "HG01362",
          "HG01365",
          "HG01374",
          "HG01377",
          "HG01383",
          "HG01389",
          "HG01392",
          "HG01395",
          "HG01398",
          "HG01402",
          "HG01405",
          "HG01412",
          "HG01413",
          "HG01431",
          "HG01437",
          "HG01440",
          "HG01443",
          "HG01455",
          "HG01461",
          "HG01464",
          "HG01479",
          "HG01485",
          "HG01488",
          "HG01491",
          "HG01494",
          "HG01497",
          "HG01500",
          "HG01503",
          "HG01506",
          "HG01509",
          "HG01512",
          "HG01515",
          "HG01518",
          "HG01521",
          "HG01524",
          "HG01527",
          "HG01530",
          "HG01536",
          "HG01550",
          "HG01556",
          "HG01565",
          "HG01571",
          "HG01577",
          "HG01583",
          "HG01586",
          "HG01589",
          "HG01596",
          "HG01603",
          "HG01606",
          "HG01608",
          "HG01610",
          "HG01615",
          "HG01617",
          "HG01619",
          "HG01624",
          "HG01625",
          "HG01630",
          "HG01631",
          "HG01669",
          "HG01672",
          "HG01675",
          "HG01678",
          "HG01680",
          "HG01682",
          "HG01686",
          "HG01694",
          "HG01699",
          "HG01700",
          "HG01705",
          "HG01708",
          "HG01709",
          "HG01747",
          "HG01756",
          "HG01761",
          "HG01765",
          "HG01767",
          "HG01771",
          "HG01775",
          "HG01777",
          "HG01781",
          "HG01783",
          "HG01785",
          "HG01789",
          "HG01791",
          "HG01810",
          "HG01811",
          "HG01816",
          "HG01840",
          "HG01842",
          "HG01844",
          "HG01846",
          "HG01849",
          "HG01852",
          "HG01860",
          "HG01861",
          "HG01864",
          "HG01865",
          "HG01866",
          "HG01867",
          "HG01872",
          "HG01873",
          "HG01879",
          "HG01882",
          "HG01885",
          "HG01890",
          "HG01892",
          "HG01912",
          "HG01914",
          "HG01917",
          "HG01920",
          "HG01923",
          "HG01926",
          "HG01932",
          "HG01935",
          "HG01938",
          "HG01941",
          "HG01944",
          "HG01947",
          "HG01950",
          "HG01953",
          "HG01961",
          "HG01967",
          "HG01970",
          "HG01974",
          "HG01977",
          "HG01979",
          "HG01982",
          "HG01986",
          "HG01988",
          "HG01990",
          "HG01991",
          "HG02002",
          "HG02008",
          "HG02009",
          "HG02013",
          "HG02014",
          "HG02017",
          "HG02020",
          "HG02023",
          "HG02026",
          "HG02029",
          "HG02032",
          "HG02035",
          "HG02040",
          "HG02047",
          "HG02050",
          "HG02051",
          "HG02053",
          "HG02058",
          "HG02061",
          "HG02064",
          "HG02067",
          "HG02070",
          "HG02073",
          "HG02076",
          "HG02079",
          "HG02082",
          "HG02085",
          "HG02088",
          "HG02090",
          "HG02104",
          "HG02107",
          "HG02116",
          "HG02122",
          "HG02128",
          "HG02131",
          "HG02134",
          "HG02137",
          "HG02138",
          "HG02141",
          "HG02143",
          "HG02146",
          "HG02150",
          "HG02219",
          "HG02221",
          "HG02224",
          "HG02231",
          "HG02233",
          "HG02236",
          "HG02238",
          "HG02250",
          "HG02253",
          "HG02255",
          "HG02259",
          "HG02262",
          "HG02265",
          "HG02271",
          "HG02274",
          "HG02277",
          "HG02281",
          "HG02283",
          "HG02284",
          "HG02285",
          "HG02291",
          "HG02299",
          "HG02304",
          "HG02307",
          "HG02314",
          "HG02317",
          "HG02323",
          "HG02330",
          "HG02332",
          "HG02334",
          "HG02343",
          "HG02351",
          "HG02353",
          "HG02355",
          "HG02356",
          "HG02360",
          "HG02364",
          "HG02367",
          "HG02371",
          "HG02373",
          "HG02374",
          "HG02375",
          "HG02379",
          "HG02380",
          "HG02382",
          "HG02383",
          "HG02384",
          "HG02385",
          "HG02386",
          "HG02389",
          "HG02390",
          "HG02391",
          "HG02392",
          "HG02394",
          "HG02395",
          "HG02396",
          "HG02397",
          "HG02398",
          "HG02399",
          "HG02401",
          "HG02402",
          "HG02406",
          "HG02407",
          "HG02408",
          "HG02409",
          "HG02410",
          "HG02420",
          "HG02429",
          "HG02433",
          "HG02439",
          "HG02442",
          "HG02445",
          "HG02449",
          "HG02455",
          "HG02461",
          "HG02464",
          "HG02470",
          "HG02481",
          "HG02484",
          "HG02489",
          "HG02490",
          "HG02493",
          "HG02496",
          "HG02501",
          "HG02512",
          "HG02521",
          "HG02536",
          "HG02541",
          "HG02545",
          "HG02554",
          "HG02557",
          "HG02561",
          "HG02570",
          "HG02573",
          "HG02582",
          "HG02585",
          "HG02588",
          "HG02594",
          "HG02597",
          "HG02600",
          "HG02603",
          "HG02610",
          "HG02613",
          "HG02620",
          "HG02623",
          "HG02628",
          "HG02634",
          "HG02642",
          "HG02645",
          "HG02648",
          "HG02651",
          "HG02654",
          "HG02657",
          "HG02660",
          "HG02666",
          "HG02675",
          "HG02678",
          "HG02681",
          "HG02684",
          "HG02687",
          "HG02690",
          "HG02696",
          "HG02699",
          "HG02702",
          "HG02715",
          "HG02721",
          "HG02724",
          "HG02727",
          "HG02733",
          "HG02736",
          "HG02756",
          "HG02759",
          "HG02768",
          "HG02771",
          "HG02774",
          "HG02780",
          "HG02783",
          "HG02786",
          "HG02789",
          "HG02792",
          "HG02798",
          "HG02804",
          "HG02807",
          "HG02810",
          "HG02813",
          "HG02816",
          "HG02819",
          "HG02836",
          "HG02839",
          "HG02851",
          "HG02854",
          "HG02860",
          "HG02878",
          "HG02881",
          "HG02884",
          "HG02887",
          "HG02890",
          "HG02895",
          "HG02923",
          "HG02938",
          "HG02941",
          "HG02944",
          "HG02947",
          "HG02953",
          "HG02968",
          "HG02971",
          "HG02973",
          "HG02977",
          "HG02981",
          "HG02982",
          "HG03006",
          "HG03009",
          "HG03012",
          "HG03015",
          "HG03018",
          "HG03021",
          "HG03024",
          "HG03027",
          "HG03039",
          "HG03045",
          "HG03048",
          "HG03054",
          "HG03057",
          "HG03060",
          "HG03063",
          "HG03066",
          "HG03069",
          "HG03072",
          "HG03074",
          "HG03077",
          "HG03078",
          "HG03081",
          "HG03084",
          "HG03096",
          "HG03100",
          "HG03103",
          "HG03109",
          "HG03112",
          "HG03115",
          "HG03118",
          "HG03120",
          "HG03124",
          "HG03127",
          "HG03130",
          "HG03133",
          "HG03136",
          "HG03139",
          "HG03157",
          "HG03160",
          "HG03163",
          "HG03166",
          "HG03169",
          "HG03172",
          "HG03175",
          "HG03190",
          "HG03193",
          "HG03196",
          "HG03199",
          "HG03202",
          "HG03209",
          "HG03224",
          "HG03225",
          "HG03228",
          "HG03234",
          "HG03237",
          "HG03240",
          "HG03246",
          "HG03258",
          "HG03265",
          "HG03268",
          "HG03271",
          "HG03280",
          "HG03295",
          "HG03298",
          "HG03301",
          "HG03304",
          "HG03311",
          "HG03313",
          "HG03343",
          "HG03352",
          "HG03367",
          "HG03370",
          "HG03376",
          "HG03382",
          "HG03385",
          "HG03388",
          "HG03391",
          "HG03394",
          "HG03397",
          "HG03432",
          "HG03433",
          "HG03436",
          "HG03439",
          "HG03442",
          "HG03445",
          "HG03451",
          "HG03457",
          "HG03460",
          "HG03469",
          "HG03472",
          "HG03478",
          "HG03484",
          "HG03490",
          "HG03515",
          "HG03518",
          "HG03521",
          "HG03538",
          "HG03547",
          "HG03556",
          "HG03559",
          "HG03565",
          "HG03571",
          "HG03577",
          "HG03585",
          "HG03593",
          "HG03594",
          "HG03600",
          "HG03603",
          "HG03615",
          "HG03624",
          "HG03629",
          "HG03636",
          "HG03644",
          "HG03646",
          "HG03649",
          "HG03652",
          "HG03660",
          "HG03663",
          "HG03667",
          "HG03672",
          "HG03679",
          "HG03680",
          "HG03681",
          "HG03685",
          "HG03686",
          "HG03687",
          "HG03691",
          "HG03693",
          "HG03694",
          "HG03695",
          "HG03696",
          "HG03697",
          "HG03702",
          "HG03705",
          "HG03708",
          "HG03711",
          "HG03713",
          "HG03716",
          "HG03718",
          "HG03720",
          "HG03727",
          "HG03729",
          "HG03738",
          "HG03740",
          "HG03742",
          "HG03743",
          "HG03744",
          "HG03745",
          "HG03746",
          "HG03750",
          "HG03753",
          "HG03755",
          "HG03767",
          "HG03771",
          "HG03773",
          "HG03775",
          "HG03777",
          "HG03778",
          "HG03779",
          "HG03785",
          "HG03786",
          "HG03788",
          "HG03790",
          "HG03792",
          "HG03800",
          "HG03803",
          "HG03809",
          "HG03812",
          "HG03815",
          "HG03821",
          "HG03824",
          "HG03830",
          "HG03833",
          "HG03837",
          "HG03844",
          "HG03846",
          "HG03848",
          "HG03850",
          "HG03851",
          "HG03854",
          "HG03856",
          "HG03864",
          "HG03866",
          "HG03867",
          "HG03869",
          "HG03870",
          "HG03871",
          "HG03872",
          "HG03875",
          "HG03885",
          "HG03887",
          "HG03890",
          "HG03896",
          "HG03899",
          "HG03900",
          "HG03902",
          "HG03905",
          "HG03908",
          "HG03911",
          "HG03914",
          "HG03917",
          "HG03920",
          "HG03926",
          "HG03941",
          "HG03943",
          "HG03950",
          "HG03953",
          "HG03960",
          "HG03963",
          "HG03965",
          "HG03967",
          "HG03969",
          "HG03971",
          "HG03974",
          "HG03976",
          "HG03978",
          "HG03985",
          "HG03990",
          "HG03991",
          "HG03998",
          "HG03999",
          "HG04002",
          "HG04003",
          "HG04006",
          "HG04015",
          "HG04017",
          "HG04019",
          "HG04020",
          "HG04022",
          "HG04023",
          "HG04033",
          "HG04039",
          "HG04056",
          "HG04060",
          "HG04061",
          "HG04080",
          "HG04093",
          "HG04094",
          "HG04096",
          "HG04098",
          "HG04100",
          "HG04107",
          "HG04131",
          "HG04134",
          "HG04140",
          "HG04146",
          "HG04152",
          "HG04155",
          "HG04158",
          "HG04161",
          "HG04164",
          "HG04173",
          "HG04176",
          "HG04182",
          "HG04185",
          "HG04188",
          "HG04194",
          "HG04198",
          "HG04206",
          "HG04210",
          "HG04211",
          "HG04219",
          "HG04222",
          "HG04225",
          "HG04229",
          "HG04235",
          "HG04238",
          "HG04239",
          "NA06984",
          "NA06986",
          "NA06994",
          "NA07048",
          "NA07051",
          "NA07347",
          "NA07357",
          "NA10851",
          "NA11829",
          "NA11831",
          "NA11843",
          "NA11881",
          "NA11893",
          "NA11919",
          "NA11930",
          "NA11932",
          "NA11992",
          "NA11994",
          "NA12003",
          "NA12005",
          "NA12043",
          "NA12045",
          "NA12144",
          "NA12154",
          "NA12155",
          "NA12272",
          "NA12282",
          "NA12286",
          "NA12340",
          "NA12342",
          "NA12347",
          "NA12399",
          "NA12413",
          "NA12546",
          "NA12716",
          "NA12748",
          "NA12750",
          "NA12760",
          "NA12762",
          "NA12775",
          "NA12777",
          "NA12812",
          "NA12814",
          "NA12827",
          "NA12829",
          "NA12842",
          "NA12872",
          "NA12874",
          "NA12889",
          "NA18486",
          "NA18498",
          "NA18501",
          "NA18504",
          "NA18507",
          "NA18510",
          "NA18516",
          "NA18519",
          "NA18522",
          "NA18530",
          "NA18534",
          "NA18536",
          "NA18543",
          "NA18544",
          "NA18546",
          "NA18548",
          "NA18549",
          "NA18557",
          "NA18558",
          "NA18559",
          "NA18561",
          "NA18562",
          "NA18563",
          "NA18572",
          "NA18603",
          "NA18605",
          "NA18606",
          "NA18608",
          "NA18609",
          "NA18611",
          "NA18612",
          "NA18613",
          "NA18620",
          "NA18621",
          "NA18622",
          "NA18623",
          "NA18624",
          "NA18629",
          "NA18632",
          "NA18633",
          "NA18635",
          "NA18636",
          "NA18637",
          "NA18638",
          "NA18639",
          "NA18643",
          "NA18645",
          "NA18647",
          "NA18648",
          "NA18740",
          "NA18745",
          "NA18747",
          "NA18748",
          "NA18749",
          "NA18757",
          "NA18853",
          "NA18856",
          "NA18865",
          "NA18868",
          "NA18871",
          "NA18874",
          "NA18877",
          "NA18879",
          "NA18908",
          "NA18910",
          "NA18915",
          "NA18917",
          "NA18923",
          "NA18934",
          "NA18940",
          "NA18943",
          "NA18944",
          "NA18945",
          "NA18948",
          "NA18952",
          "NA18953",
          "NA18959",
          "NA18960",
          "NA18961",
          "NA18962",
          "NA18965",
          "NA18966",
          "NA18967",
          "NA18970",
          "NA18971",
          "NA18974",
          "NA18977",
          "NA18982",
          "NA18983",
          "NA18984",
          "NA18985",
          "NA18986",
          "NA18988",
          "NA18989",
          "NA18990",
          "NA18994",
          "NA18995",
          "NA19000",
          "NA19004",
          "NA19005",
          "NA19006",
          "NA19007",
          "NA19009",
          "NA19012",
          "NA19020",
          "NA19025",
          "NA19026",
          "NA19027",
          "NA19028",
          "NA19031",
          "NA19035",
          "NA19041",
          "NA19043",
          "NA19055",
          "NA19056",
          "NA19058",
          "NA19060",
          "NA19062",
          "NA19063",
          "NA19066",
          "NA19067",
          "NA19068",
          "NA19070",
          "NA19072",
          "NA19075",
          "NA19076",
          "NA19079",
          "NA19082",
          "NA19083",
          "NA19085",
          "NA19086",
          "NA19088",
          "NA19089",
          "NA19091",
          "NA19092",
          "NA19096",
          "NA19098",
          "NA19107",
          "NA19113",
          "NA19117",
          "NA19119",
          "NA19121",
          "NA19130",
          "NA19138",
          "NA19141",
          "NA19144",
          "NA19146",
          "NA19153",
          "NA19160",
          "NA19171",
          "NA19175",
          "NA19184",
          "NA19189",
          "NA19198",
          "NA19200",
          "NA19207",
          "NA19210",
          "NA19213",
          "NA19223",
          "NA19236",
          "NA19239",
          "NA19248",
          "NA19256",
          "NA19307",
          "NA19308",
          "NA19309",
          "NA19312",
          "NA19317",
          "NA19318",
          "NA19319",
          "NA19331",
          "NA19334",
          "NA19346",
          "NA19347",
          "NA19350",
          "NA19360",
          "NA19372",
          "NA19374",
          "NA19375",
          "NA19376",
          "NA19380",
          "NA19383",
          "NA19384",
          "NA19385",
          "NA19393",
          "NA19394",
          "NA19397",
          "NA19428",
          "NA19429",
          "NA19430",
          "NA19443",
          "NA19448",
          "NA19451",
          "NA19452",
          "NA19454",
          "NA19455",
          "NA19461",
          "NA19466",
          "NA19649",
          "NA19652",
          "NA19655",
          "NA19658",
          "NA19661",
          "NA19664",
          "NA19670",
          "NA19676",
          "NA19679",
          "NA19682",
          "NA19700",
          "NA19703",
          "NA19711",
          "NA19717",
          "NA19720",
          "NA19723",
          "NA19726",
          "NA19729",
          "NA19732",
          "NA19735",
          "NA19741",
          "NA19747",
          "NA19750",
          "NA19756",
          "NA19759",
          "NA19762",
          "NA19771",
          "NA19774",
          "NA19777",
          "NA19780",
          "NA19783",
          "NA19786",
          "NA19789",
          "NA19792",
          "NA19795",
          "NA19818",
          "NA19834",
          "NA19900",
          "NA19904",
          "NA19908",
          "NA19916",
          "NA19920",
          "NA19922",
          "NA19982",
          "NA19984",
          "NA20126",
          "NA20278",
          "NA20281",
          "NA20291",
          "NA20298",
          "NA20318",
          "NA20340",
          "NA20342",
          "NA20346",
          "NA20348",
          "NA20351",
          "NA20356",
          "NA20362",
          "NA20509",
          "NA20510",
          "NA20511",
          "NA20512",
          "NA20513",
          "NA20515",
          "NA20516",
          "NA20518",
          "NA20519",
          "NA20520",
          "NA20521",
          "NA20524",
          "NA20525",
          "NA20527",
          "NA20528",
          "NA20532",
          "NA20534",
          "NA20536",
          "NA20538",
          "NA20539",
          "NA20543",
          "NA20544",
          "NA20581",
          "NA20586",
          "NA20588",
          "NA20752",
          "NA20754",
          "NA20755",
          "NA20758",
          "NA20759",
          "NA20762",
          "NA20763",
          "NA20765",
          "NA20767",
          "NA20770",
          "NA20778",
          "NA20783",
          "NA20785",
          "NA20787",
          "NA20792",
          "NA20796",
          "NA20798",
          "NA20801",
          "NA20803",
          "NA20805",
          "NA20806",
          "NA20809",
          "NA20810",
          "NA20811",
          "NA20812",
          "NA20814",
          "NA20815",
          "NA20827",
          "NA20845",
          "NA20846",
          "NA20850",
          "NA20852",
          "NA20858",
          "NA20861",
          "NA20863",
          "NA20864",
          "NA20866",
          "NA20867",
          "NA20870",
          "NA20884",
          "NA20885",
          "NA20887",
          "NA20889",
          "NA20890",
          "NA20891",
          "NA20895",
          "NA20897",
          "NA20901",
          "NA20903",
          "NA20904",
          "NA20905",
          "NA20911",
          "NA21087",
          "NA21090",
          "NA21091",
          "NA21092",
          "NA21093",
          "NA21094",
          "NA21095",
          "NA21098",
          "NA21099",
          "NA21100",
          "NA21104",
          "NA21105",
          "NA21107",
          "NA21109",
          "NA21111",
          "NA21112",
          "NA21113",
          "NA21114",
          "NA21115",
          "NA21116",
          "NA21117",
          "NA21118",
          "NA21119",
          "NA21123",
          "NA21124",
          "NA21126",
          "NA21127",
          "NA21128",
          "NA21129",
          "NA21130",
          "NA21133",
          "NA21135",
        ],
        "strict": true,
      },
      "rest": "0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0",
      "that": [Circular],
    },
  },
]
`;

exports[`shortcut parsing with vcf 4.3 bnd example 1`] = `
Array [
  Variant {
    "ALT": Array [
      "G]17:198982]",
    ],
    "CHROM": "2",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "bnd_W",
    ],
    "POS": 321681,
    "QUAL": 6,
    "REF": "G",
    "fields": Array [
      "2",
      "321681",
      "bnd_W",
      "G",
      "G]17:198982]",
      "6",
      "PASS",
      "SVTYPE=BND",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "]13:123456]T",
    ],
    "CHROM": "2",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "bnd_V",
    ],
    "POS": 321682,
    "QUAL": 6,
    "REF": "T",
    "fields": Array [
      "2",
      "321682",
      "bnd_V",
      "T",
      "]13:123456]T",
      "6",
      "PASS",
      "SVTYPE=BND",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "C[2:321682[",
    ],
    "CHROM": "13",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "bnd_U",
    ],
    "POS": 123456,
    "QUAL": 6,
    "REF": "C",
    "fields": Array [
      "13",
      "123456",
      "bnd_U",
      "C",
      "C[2:321682[",
      "6",
      "PASS",
      "SVTYPE=BND",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "[17:198983[A",
    ],
    "CHROM": "13",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "bnd_X",
    ],
    "POS": 123457,
    "QUAL": 6,
    "REF": "A",
    "fields": Array [
      "13",
      "123457",
      "bnd_X",
      "A",
      "[17:198983[A",
      "6",
      "PASS",
      "SVTYPE=BND",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "A]2:321681]",
    ],
    "CHROM": "17",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "bnd_Y",
    ],
    "POS": 198982,
    "QUAL": 6,
    "REF": "A",
    "fields": Array [
      "17",
      "198982",
      "bnd_Y",
      "A",
      "A]2:321681]",
      "6",
      "PASS",
      "SVTYPE=BND",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "[13:123457[C",
    ],
    "CHROM": "17",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "bnd_Z",
    ],
    "POS": 198983,
    "QUAL": 6,
    "REF": "C",
    "fields": Array [
      "17",
      "198983",
      "bnd_Z",
      "C",
      "[13:123457[C",
      "6",
      "PASS",
      "SVTYPE=BND",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
        },
      },
      "samples": Array [],
      "strict": true,
    },
    "rest": "",
    "that": [Circular],
  },
]
`;

exports[`snippet from VCF 4.3 spec 1`] = `
Array [
  Variant {
    "ALT": Array [
      "A",
    ],
    "CHROM": "20",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs6054257",
    ],
    "POS": 14370,
    "QUAL": 29,
    "REF": "G",
    "fields": Array [
      "20",
      "14370",
      "rs6054257",
      "G",
      "A",
      "29",
      "PASS",
      "NS=3;DP=14;AF=0.5;DB;H2",
      "GT:GQ:DP:HQ",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
          "undefined": Object {
            "0": "s",
            "1": "5",
            "2": "0",
            "Number": undefined,
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
          "undefined": Object {
            "0": "H",
            "1": "Q",
            "Number": 2,
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
          "undefined": Object {
            "0": "H",
            "1": "2",
            "Number": 0,
          },
        },
        "contig": Object {
          "undefined": Object {
            "0": "2",
            "1": "0",
            "Number": undefined,
          },
        },
        "fileDate": "20090805",
        "fileformat": "VCFv4.3",
        "phasing": "partial",
        "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
        "source": "myImputationProgramV3.1",
      },
      "samples": Array [
        "NA00001",
        "NA00002",
        "NA00003",
      ],
      "strict": true,
    },
    "rest": "0|0:48:1:51,51	1|0:48:8:51,51	1/1:43:5:.,.",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "A",
    ],
    "CHROM": "20",
    "FILTER": Array [
      "q10",
    ],
    "ID": null,
    "POS": 17330,
    "QUAL": 3,
    "REF": "T",
    "fields": Array [
      "20",
      "17330",
      ".",
      "T",
      "A",
      "3",
      "q10",
      "NS=3;DP=11;AF=0.017",
      "GT:GQ:DP:HQ",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
          "undefined": Object {
            "0": "s",
            "1": "5",
            "2": "0",
            "Number": undefined,
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
          "undefined": Object {
            "0": "H",
            "1": "Q",
            "Number": 2,
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
          "undefined": Object {
            "0": "H",
            "1": "2",
            "Number": 0,
          },
        },
        "contig": Object {
          "undefined": Object {
            "0": "2",
            "1": "0",
            "Number": undefined,
          },
        },
        "fileDate": "20090805",
        "fileformat": "VCFv4.3",
        "phasing": "partial",
        "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
        "source": "myImputationProgramV3.1",
      },
      "samples": Array [
        "NA00001",
        "NA00002",
        "NA00003",
      ],
      "strict": true,
    },
    "rest": "0|0:49:3:58,50	0|1:3:5:65,3	0/0:41:3",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "G",
      "T",
    ],
    "CHROM": "20",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "rs6040355",
    ],
    "POS": 1110696,
    "QUAL": 67,
    "REF": "A",
    "fields": Array [
      "20",
      "1110696",
      "rs6040355",
      "A",
      "G,T",
      "67",
      "PASS",
      "NS=2;DP=10;AF=0.333,0.667;AA=T;DB",
      "GT:GQ:DP:HQ",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
          "undefined": Object {
            "0": "s",
            "1": "5",
            "2": "0",
            "Number": undefined,
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
          "undefined": Object {
            "0": "H",
            "1": "Q",
            "Number": 2,
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
          "undefined": Object {
            "0": "H",
            "1": "2",
            "Number": 0,
          },
        },
        "contig": Object {
          "undefined": Object {
            "0": "2",
            "1": "0",
            "Number": undefined,
          },
        },
        "fileDate": "20090805",
        "fileformat": "VCFv4.3",
        "phasing": "partial",
        "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
        "source": "myImputationProgramV3.1",
      },
      "samples": Array [
        "NA00001",
        "NA00002",
        "NA00003",
      ],
      "strict": true,
    },
    "rest": "1|2:21:6:23,27	2|1:2:0:18,2	2/2:35:4",
    "that": [Circular],
  },
  Variant {
    "ALT": null,
    "CHROM": "20",
    "FILTER": Array [
      "PASS",
    ],
    "ID": null,
    "POS": 1230237,
    "QUAL": 47,
    "REF": "T",
    "fields": Array [
      "20",
      "1230237",
      ".",
      "T",
      ".",
      "47",
      "PASS",
      "NS=3;DP=13;AA=T",
      "GT:GQ:DP:HQ",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
          "undefined": Object {
            "0": "s",
            "1": "5",
            "2": "0",
            "Number": undefined,
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
          "undefined": Object {
            "0": "H",
            "1": "Q",
            "Number": 2,
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
          "undefined": Object {
            "0": "H",
            "1": "2",
            "Number": 0,
          },
        },
        "contig": Object {
          "undefined": Object {
            "0": "2",
            "1": "0",
            "Number": undefined,
          },
        },
        "fileDate": "20090805",
        "fileformat": "VCFv4.3",
        "phasing": "partial",
        "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
        "source": "myImputationProgramV3.1",
      },
      "samples": Array [
        "NA00001",
        "NA00002",
        "NA00003",
      ],
      "strict": true,
    },
    "rest": "0|0:54:7:56,60	0|0:48:4:51,51	0/0:61:2",
    "that": [Circular],
  },
  Variant {
    "ALT": Array [
      "G",
      "GTCT",
    ],
    "CHROM": "20",
    "FILTER": Array [
      "PASS",
    ],
    "ID": Array [
      "microsat1",
    ],
    "POS": 1234567,
    "QUAL": 50,
    "REF": "GTC",
    "fields": Array [
      "20",
      "1234567",
      "microsat1",
      "GTC",
      "G,GTCT",
      "50",
      "PASS",
      "NS=3;DP=9;AA=G",
      "GT:GQ:DP",
    ],
    "parser": VCF {
      "metadata": Object {
        "ALT": Object {
          "*": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
          "CNV": Object {
            "Description": "Copy number variable region (may be both deletion and duplication)",
          },
          "DEL": Object {
            "Description": "Deletion relative to the reference",
          },
          "DEL:ME": Object {
            "Description": "Deletion of mobile element relative to the reference",
          },
          "DUP": Object {
            "Description": "Region of elevated copy number relative to the reference",
          },
          "DUP:TANDEM": Object {
            "Description": "Tandem duplication",
          },
          "INS": Object {
            "Description": "Insertion of novel sequence relative to the reference",
          },
          "INS:ME": Object {
            "Description": "Insertion of a mobile element relative to the reference",
          },
          "INV": Object {
            "Description": "Inversion of reference sequence",
          },
          "NON_REF": Object {
            "Description": "Represents any possible alternative allele at this location",
          },
        },
        "FILTER": Object {
          "PASS": Object {
            "Description": "Passed all filters",
          },
          "undefined": Object {
            "0": "s",
            "1": "5",
            "2": "0",
            "Number": undefined,
          },
        },
        "FORMAT": Object {
          "AD": Object {
            "Description": "Read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "DP": Object {
            "Description": "Read depth",
            "Number": 1,
            "Type": "Integer",
          },
          "EC": Object {
            "Description": "Expected alternate allele counts",
            "Number": "A",
            "Type": "Integer",
          },
          "FT": Object {
            "Description": "Filter indicating if this genotype was \\"called\\"",
            "Number": 1,
            "Type": "String",
          },
          "GL": Object {
            "Description": "Genotype likelihoods",
            "Number": "G",
            "Type": "Float",
          },
          "GP": Object {
            "Description": "Genotype posterior probabilities",
            "Number": "G",
            "Type": "Float",
          },
          "GQ": Object {
            "Description": "Conditional genotype quality",
            "Number": 1,
            "Type": "Integer",
          },
          "GT": Object {
            "Description": "Genotype",
            "Number": 1,
            "Type": "String",
          },
          "HQ": Object {
            "Description": "Haplotype quality",
            "Number": 2,
            "Type": "Integer",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PL": Object {
            "Description": "Phred-scaled genotype likelihoods rounded to the closest integer",
            "Number": "G",
            "Type": "Integer",
          },
          "PQ": Object {
            "Description": "Phasing quality",
            "Number": 1,
            "Type": "Integer",
          },
          "PS": Object {
            "Description": "Phase set",
            "Number": 1,
            "Type": "Integer",
          },
          "undefined": Object {
            "0": "H",
            "1": "Q",
            "Number": 2,
          },
        },
        "INFO": Object {
          "1000G": Object {
            "Description": "1000 Genomes membership",
            "Number": 0,
            "Type": "Flag",
          },
          "AA": Object {
            "Description": "Ancestral allele",
            "Number": 1,
            "Type": "String",
          },
          "AC": Object {
            "Description": "Allele count in genotypes, for each ALT allele, in the same order as listed",
            "Number": "A",
            "Type": "Integer",
          },
          "AD": Object {
            "Description": "Total read depth for each allele",
            "Number": "R",
            "Type": "Integer",
          },
          "ADF": Object {
            "Description": "Read depth for each allele on the forward strand",
            "Number": "R",
            "Type": "Integer",
          },
          "ADR": Object {
            "Description": "Read depth for each allele on the reverse strand",
            "Number": "R",
            "Type": "Integer",
          },
          "AF": Object {
            "Description": "Allele frequency for each ALT allele in the same order as listed (estimated from primary data, not called genotypes)",
            "Number": "A",
            "Type": "Float",
          },
          "AN": Object {
            "Description": "Total number of alleles in called genotypes",
            "Number": 1,
            "Type": "Integer",
          },
          "BKPTID": Object {
            "Description": "ID of the assembled alternate allele in the assembly file",
            "Type": "String",
          },
          "BQ": Object {
            "Description": "RMS base quality",
            "Number": 1,
            "Type": "Float",
          },
          "CICN": Object {
            "Description": "Confidence interval around copy number for the segment",
            "Number": 2,
            "Type": "Integer",
          },
          "CICNADJ": Object {
            "Description": "Confidence interval around copy number for the adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "CIEND": Object {
            "Description": "Confidence interval around END for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CIGAR": Object {
            "Description": "Cigar string describing how to align an alternate allele to the reference allele",
            "Number": 1,
            "Type": "Float",
          },
          "CILEN": Object {
            "Description": "Confidence interval around the inserted material between breakend",
            "Number": 2,
            "Type": "Integer",
          },
          "CIPOS": Object {
            "Description": "Confidence interval around POS for imprecise variants",
            "Number": 2,
            "Type": "Integer",
          },
          "CN": Object {
            "Description": "Copy number of segment containing breakend",
            "Number": 1,
            "Type": "Integer",
          },
          "CNADJ": Object {
            "Description": "Copy number of adjacency",
            "Number": null,
            "Type": "Integer",
          },
          "DB": Object {
            "Description": "dbSNP membership",
            "Number": 0,
            "Type": "Flag",
          },
          "DBRIPID": Object {
            "Description": "ID of this element in DBRIP",
            "Number": 1,
            "Type": "String",
          },
          "DBVARID": Object {
            "Description": "ID of this element in DBVAR",
            "Number": 1,
            "Type": "String",
          },
          "DGVID": Object {
            "Description": "ID of this element in Database of Genomic Variation",
            "Number": 1,
            "Type": "String",
          },
          "DP": Object {
            "Description": "combined depth across samples",
            "Number": 1,
            "Type": "Integer",
          },
          "DPADJ": Object {
            "Description": "Read Depth of adjacency",
            "Type": "Integer",
          },
          "END": Object {
            "Description": "End position (for use with symbolic alleles)",
            "Number": 1,
            "Type": "Integer",
          },
          "EVENT": Object {
            "Description": "ID of event associated to breakend",
            "Number": 1,
            "Type": "String",
          },
          "H2": Object {
            "Description": "HapMap2 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "H3": Object {
            "Description": "HapMap3 membership",
            "Number": 0,
            "Type": "Flag",
          },
          "HOMLEN": Object {
            "Description": "Length of base pair identical micro-homology at event breakpoints",
            "Type": "Integer",
          },
          "HOMSEQ": Object {
            "Description": "Sequence of base pair identical micro-homology at event breakpoints",
            "Type": "String",
          },
          "IMPRECISE": Object {
            "Description": "Imprecise structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "MATEID": Object {
            "Description": "ID of mate breakends",
            "Number": null,
            "Type": "String",
          },
          "MEINFO": Object {
            "Description": "Mobile element info of the form NAME,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "METRANS": Object {
            "Description": "Mobile element transduction info of the form CHR,START,END,POLARITY",
            "Number": 4,
            "Type": "String",
          },
          "MQ": Object {
            "Description": "RMS mapping quality",
            "Number": 1,
            "Type": null,
          },
          "MQ0": Object {
            "Description": "Number of MAPQ == 0 reads",
            "Number": 1,
            "Type": "Integer",
          },
          "NOVEL": Object {
            "Description": "Indicates a novel structural variation",
            "Number": 0,
            "Type": "Flag",
          },
          "NS": Object {
            "Description": "Number of samples with data",
            "Number": 1,
            "Type": "Integer",
          },
          "PARID": Object {
            "Description": "ID of partner breakend",
            "Number": 1,
            "Type": "String",
          },
          "SB": Object {
            "Description": "Strand bias",
            "Number": 4,
            "Type": "Integer",
          },
          "SOMATIC": Object {
            "Description": "Somatic mutation (for cancer genomics)",
            "Number": 0,
            "Type": "Flag",
          },
          "SVLEN": Object {
            "Description": "Difference in length between REF and ALT alleles",
            "Number": null,
            "Type": "Integer",
          },
          "SVTYPE": Object {
            "Description": "Type of structural variant",
            "Number": 1,
            "Type": "String",
          },
          "VALIDATED": Object {
            "Description": "Validated by follow-up experiment",
            "Number": 0,
            "Type": "Flag",
          },
          "undefined": Object {
            "0": "H",
            "1": "2",
            "Number": 0,
          },
        },
        "contig": Object {
          "undefined": Object {
            "0": "2",
            "1": "0",
            "Number": undefined,
          },
        },
        "fileDate": "20090805",
        "fileformat": "VCFv4.3",
        "phasing": "partial",
        "reference": "file:///seq/references/1000GenomesPilot-NCBI36.fasta",
        "source": "myImputationProgramV3.1",
      },
      "samples": Array [
        "NA00001",
        "NA00002",
        "NA00003",
      ],
      "strict": true,
    },
    "rest": "0/1:35:4	0/2:17:2	1/1:40:3",
    "that": [Circular],
  },
]
`;

exports[`snippet from VCF 4.3 spec 2`] = `
Array [
  Object {
    "NA00001": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00002": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00003": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
  },
  Object {
    "NA00001": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00002": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00003": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": null,
    },
  },
  Object {
    "NA00001": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00002": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00003": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": null,
    },
  },
  Object {
    "NA00001": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00002": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": undefined,
    },
    "NA00003": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
      "HQ": null,
    },
  },
  Object {
    "NA00001": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
    },
    "NA00002": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
    },
    "NA00003": Object {
      "DP": undefined,
      "GQ": undefined,
      "GT": undefined,
    },
  },
]
`;

exports[`vcf 4.3 single breakends 1`] = `
Object {
  "Join": "right",
  "MateDirection": "right",
  "MatePosition": "<ctg1>:1",
  "Replacement": "C",
}
`;

exports[`vcf 4.3 single breakends 2`] = `
Object {
  "Join": "right",
  "MateDirection": "right",
  "MatePosition": "13:123457",
  "Replacement": ".",
}
`;

exports[`vcf 4.3 single breakends 3`] = `
Object {
  "Join": "left",
  "MateDirection": "left",
  "MatePosition": "13:123456",
  "Replacement": "AGTNNNNNCAT",
}
`;

exports[`vcf 4.3 single breakends 4`] = `undefined`;
